* Checking for deprecated package usage... OK
* Checking for remote package usage... OK
* Checking for 'LazyData: true' usage... OK
* Checking version number... OK
* Checking version number validity... OK
* Checking R version dependency... OK
* Checking package size... OK
* Checking individual file sizes... OK
* Checking biocViews... OK
* Checking that biocViews are present... OK
* Checking package type based on biocViews... OK
* Checking for non-trivial biocViews... OK
* Checking that biocViews come from the same category... OK
* Checking biocViews validity...
* WARNING: Invalid BiocViews term(s):
'RNA-Seq': Did you meanone of 'DNASeq', 'RNASeq'?
'Differential Expression': Did you mean 'DifferentialExpression'?
* Checking for recommended biocViews...
* NOTE: Consider adding these automatically suggested biocViews: GeneExpression, Regression
* Checking build system compatibility... OK
* Checking for blank lines in DESCRIPTION... OK
* Checking if DESCRIPTION is well formatted... OK
* Checking for proper Description: field...
* NOTE: The Description field in the DESCRIPTION is made up by less than 3 sentences. Please consider
expanding this field, and structure it as a full paragraph
* Checking for whitespace in DESCRIPTION field names... OK
* Checking that Package field matches directory/tarball name... OK
* Checking for Version field... OK
* Checking for valid maintainer...
* ERROR: Do not use Author/Maintainer fields. Use Authors@R.
* ERROR: Remove Maintainer field. Use Authors@R [cre] designation.
* Checking License: for restrictive use... OK
* Checking for pinned package versions... OK
* Checking DESCRIPTION/NAMESPACE consistency...
* WARNING: Import UpSetR in NAMESPACE as well as DESCRIPTION.
* Checking .Rbuildignore... OK
* Checking for stray BiocCheck output folders...
* ERROR: Remove 'scMaSigPro.BiocCheck' from the package directory
* Checking for inst/doc folders... OK
* Checking vignette directory...
* ERROR: No 'vignettes' directory.
* Checking package installation calls in R code... OK
* Checking for library/require of scMaSigPro... OK
* Checking coding practice...
* NOTE:  Avoid sapply(); use vapply()
Found in files:
R/create_range.R (line  38, column 20)
R/create_range.R (line  41, column 20)
R/sc.T.fit.R (line 223, column 39)
* NOTE:  Avoid 1:...; use seq_len() or seq_along()
Found in files:
convert_to_path.R (line 21, column 44)
extract_fitting.R (line 43, column 23)
make.pseudobulk.counts.R (line 75, column 23)
sc.p.vector.R (line 126, column 29)
sc.p.vector.R (line 130, column 14)
sc.PlotGroups.R (line 105, column 53)
sc.stepfor.R (line 7, column 13)
sc.stepfor.R (line 17, column 12)
sc.stepfor.R (line 35, column 17)
sc.T.fit.R (line 113, column 20)
sc.T.fit.R (line 155, column 20)
sc.T.fit.R (line 171, column 20)
sc.T.fit.R (line 188, column 20)
sc.T.fit.R (line 261, column 17)
sc.T.fit.R (line 264, column 19)
sc.two.ways.stepback.R (line 25, column 17)
sc.two.ways.stepback.R (line 35, column 16)
sc.two.ways.stepback.R (line 43, column 18)
sc.two.ways.stepback.R (line 54, column 19)
sc.two.ways.stepfor.R (line 8, column 15)
sc.two.ways.stepfor.R (line 18, column 14)
sc.two.ways.stepfor.R (line 60, column 17)
* NOTE:  Avoid 'cat' and 'print' outside of 'show' methods
Found in files:
print() in R/as_scmp.R (line 126, column  7)
print() in R/as_scmp.R (line 165, column  7)
print() in R/sc.PlotGroups.R (line  77, column 11)
print() in R/sc.PlotGroups.R (line 128, column  7)
cat() in R/scmpShow.R (line  15, column  3)
cat() in R/scmpShow.R (line  16, column  3)
cat() in R/scmpShow.R (line  17, column  3)
cat() in R/scmpShow.R (line  18, column  3)
cat() in R/scmpShow.R (line  23, column  5)
cat() in R/scmpShow.R (line  24, column  5)
cat() in R/scmpShow.R (line  34, column  5)
cat() in R/scmpShow.R (line  35, column  5)
cat() in R/scmpShow.R (line  43, column  7)
cat() in R/scmpShow.R (line  45, column  7)
cat() in R/scmpShow.R (line  51, column  5)
* NOTE:  Avoid using '=' for assignment and use '<-' instead
Found in files:
R/sc.PlotGroups.R (line  25, column 19)
R/sc.PlotGroups.R (line  35, column 15)
R/sc.PlotGroups.R (line  38, column 21)
R/sc.T.fit.R (line 136, column 20)
* NOTE:  Avoid the use of 'paste' in condition signals
Found in files:
R/annotate_monocle3_cds.R (line 91, column 13)
R/annotate_monocle3_cds.R (line 91, column 73)
R/annotate_monocle3_cds.R (line 132, column 13)
R/annotate_monocle3_cds.R (line 133, column 13)
R/annotate_sce.R (line 64, column 15)
R/annotate_sce.R (line 97, column 15)
R/create_range.R (line 44, column 13)
R/entropy_discretize.R (line 136, column 13)
R/entropy_discretize.R (line 137, column 13)
R/entropy_discretize.R (line 139, column 13)
R/entropy_discretize.R (line 140, column 13)
R/entropy_discretize.R (line 154, column 19)
R/entropy_discretize.R (line 159, column 17)
R/entropy_discretize.R (line 171, column 21)
R/entropy_discretize.R (line 175, column 19)
R/entropy_discretize.R (line 181, column 17)
R/entropy_discretize.R (line 199, column 17)
R/entropy_discretize.R (line 236, column 21)
R/entropy_discretize.R (line 242, column 19)
R/entropy_discretize.R (line 254, column 23)
R/entropy_discretize.R (line 261, column 21)
R/entropy_discretize.R (line 271, column 19)
R/estBinSize.R (line 65, column 10)
R/make.pseudobulk.design.R (line 128, column 15)
R/sc.p.vector.R (line 120, column 15)
R/sc.T.fit.R (line 107, column 17)
R/sc.T.fit.R (line 280, column 13)
* NOTE:  Avoid redundant 'stop' and 'warn*' in signal conditions
Found in files:
R/entropy_discretize.R (line 175, column 25)
R/entropy_discretize.R (line 261, column 27)
* WARNING:  Avoid T/F variables; If logical, use TRUE/FALSE 
Found 32 times:
F in R/entropy_discretize.R (line 225, column 79)
F in R/make.pseudobulk.counts.R (line  86, column 58)
F in R/make.pseudobulk.design.R (line 101, column 75)
T in R/sc.get.siggenes.R (line  64, column 42)
T in R/sc.get.siggenes.R (line  65, column 52)
T in R/sc.get.siggenes.R (line  66, column 54)
F in R/sc.get.siggenes.R (line  64, column 52)
F in R/sc.get.siggenes.R (line  65, column 62)
F in R/sc.get.siggenes.R (line  66, column 64)
F in R/sc.make.design.matrix.R (line  52, column 84)
T in R/sc.p.vector.R (line  58, column 50)
T in R/sc.p.vector.R (line 167, column 52)
T in R/sc.p.vector.R (line 167, column 67)
T in R/sc.p.vector.R (line 171, column 17)
T in R/sc.p.vector.R (line 171, column 32)
F in R/sc.p.vector.R (line  58, column 64)
F in R/sc.p.vector.R (line  99, column 19)
F in R/sc.p.vector.R (line 132, column 21)
T in R/sc.PlotGroups.R (line  46, column 60)
T in R/sc.PlotGroups.R (line 105, column 44)
F in R/sc.PlotGroups.R (line  32, column 73)
F in R/sc.PlotGroups.R (line  46, column 48)
F in R/sc.PlotGroups.R (line  47, column 76)
F in R/sc.PlotGroups.R (line 105, column 47)
T in R/sc.T.fit.R (line  63, column 31)
T in R/sc.T.fit.R (line  65, column 33)
F in R/sc.T.fit.R (line 133, column 23)
F in R/sc.T.fit.R (line 156, column 27)
F in R/sc.T.fit.R (line 172, column 27)
F in R/sc.T.fit.R (line 189, column 27)
F in R/sc.T.fit.R (line 226, column 33)
F in R/showSigProf.R (line  35, column 83)
* WARNING:  Avoid class membership checks with class() / is() and == / !=; Use is(x, 'class') for S4 classes
Found in files:
as_scmp.R (line 96, column 21)
as_scmp.R (line 131, column 28)
* Checking parsed R code in R directory, examples, vignettes... OK
* Checking function lengths...
* NOTE: The recommended function length is 50 lines or less. There are 15 functions greater than 50 lines.
The longest 5 functions are:
entropy_discretize() (R/entropy_discretize.R): 255 lines
sc.T.fit() (R/sc.T.fit.R): 250 lines
sc.p.vector() (R/sc.p.vector.R): 156 lines
as_scmp() (R/as_scmp.R): 126 lines
annotate_monocle3_cds() (R/annotate_monocle3_cds.R): 121 lines
* Checking man page documentation...
* WARNING: Empty or missing \value sections found in man pages.
Found in files:
man/addParamClass-class.Rd, man/dot-smsp_show.Rd, man/edesignClass-class.Rd, man/scMaSigProClass-class.Rd, man/scPVectorClass-class.Rd, man/scTFitClass-class.Rd, man/sim.sce.Rd
* ERROR: At least 80% of man pages documenting exported objects must have runnable examples.
The following pages do not:
annotate_monocle3_cds.Rd
annotate_sce.Rd
as_scmp.Rd
dot-smsp_show.Rd
entropy_discretize.Rd
make.pseudobulk.counts.Rd
make.pseudobulk.design.Rd
sc.get.siggenes.Rd
sc.make.design.matrix.Rd
sc.p.vector.Rd
sc.PlotGroups.Rd
sc.T.fit.Rd
showCoeff.Rd
showSigProf.Rd
showSol.Rd
* NOTE: Usage of dontrun{} / donttest{} tags found in man page examples. 37% of man pages use at least one of these tags.
Found in files:
annotate_monocle3_cds.Rd
annotate_sce.Rd
as_scmp.Rd
entropy_discretize.Rd
make.pseudobulk.counts.Rd
make.pseudobulk.design.Rd
sc.path.intersection.Rd
showCoeff.Rd
showSigProf.Rd
showSol.Rd
* NOTE: Use donttest{} instead of dontrun{}.
Found in files:
annotate_monocle3_cds.Rd
annotate_sce.Rd
as_scmp.Rd
entropy_discretize.Rd
make.pseudobulk.counts.Rd
make.pseudobulk.design.Rd
sc.path.intersection.Rd
showCoeff.Rd
showSigProf.Rd
showSol.Rd
* Checking package NEWS...
* NOTE: Consider adding a NEWS file, so your package news will be included in Bioconductor release announcements.
* Checking unit tests...
* NOTE: Consider adding unit tests. We strongly encourage them. See
  https://contributions.bioconductor.org/tests.html
* Checking skip_on_bioc() in tests... OK
* Checking formatting of DESCRIPTION, NAMESPACE, man pages, R source, and vignette source...
* NOTE: Consider shorter lines; 511 lines (11%) are > 80 characters long.
First few lines:
R/addParamClass.R#L  3 #' @slot bin_pseudotime_colname A charac...
R/addParamClass.R#L  6 #' @slot pseudotime_colname A character ...
R/addParamClass.R#L  9 #' @slot path_colname A character repres...
R/addParamClass.R#L 10 #' @slot bin_colname A character represe...
R/addParamClass.R#L 11 #' @slot bin_size_colname A character re...
R/addParamClass.R#L 12 #' @slot bin_members_colname A character...
R/addParamClass.R#L 14 #' @slot min.obs Minimum value to estima...
R/addParamClass.R#L 18 #' @slot step.method A character specify...
R/addParamClass.R#L 43     min.obs = "numeric", # Minimum value...
R/addParamClass.R#L 60       if (length(slot_value) == 0 || !is...
R/addParamClass.R#L 61         errors <- c(errors, paste(slot_n...
R/addParamClass.R#L 89         errors <- c(errors, paste(slot_n...
R/annotate_monocle3_cds.R#L  4 #' `annotate_monocle3_cds()` annotates t...
R/annotate_monocle3_cds.R#L 30 #' \code{\link[monocle3]{principal_graph...
R/annotate_monocle3_cds.R#L 31 #' \code{\link[igraph]{shortest_paths}},...
R/annotate_monocle3_cds.R#L 65   y_to_cells.df <- principal_graph_aux(c...
R/annotate_monocle3_cds.R#L 68   # Add a new column 'barcode' with the ...
R/annotate_monocle3_cds.R#L 70     mutate(barcode = rownames(y_to_cells...
R/annotate_monocle3_cds.R#L 78     message(paste("Identified ", root_la...
R/annotate_monocle3_cds.R#L 84   # Get the endpoint nodes (degree 1 nod...
R/annotate_monocle3_cds.R#L 90     message(paste("Identified endpoints ...
R/annotate_monocle3_cds.R#L 91     message(paste("Number of potential",...
R/annotate_monocle3_cds.R#L107     path.frame <- data.frame(weights = a...
R/annotate_monocle3_cds.R#L130     maxPath <- num.cells.per.path[num.ce...
R/annotate_monocle3_cds.R#L131     minPath <- num.cells.per.path[num.ce...
R/annotate_monocle3_cds.R#L132     message(paste("Longest", path_prefix...
R/annotate_monocle3_cds.R#L133     message(paste("Shortest", path_prefi...
R/annotate_monocle3_cds.R#L152   cell.meta[rownames(cell.meta) %in% c(r...
R/annotate_monocle3_cds.R#L155   if (all(apply(pseudotime.path.frame, 1...
R/annotate_monocle3_cds.R#L161     stop("Pseudotime is different for di...
R/annotate_monocle3_cds.R#L173   # Return a list with updated cell data...
R/annotate_sce.R#L  1 #' @title Annotate 'SingleCellExperiment...
R/annotate_sce.R#L  4 #' `annotate_sce()` annotates a SingleCe...
R/annotate_sce.R#L  5 #' and path information in its `cell.met...
R/annotate_sce.R#L 19 #' @param existing_path_colname The name...
R/annotate_sce.R#L 29 #' @seealso SingleCellExperiment class o...
R/annotate_sce.R#L 58       all(!is.null(existing_pseudotime_c...
R/annotate_sce.R#L 59       msg = paste("Requested to set 'pat...
R/annotate_sce.R#L 60                   'existing_pseudotime_c...
R/annotate_sce.R#L 65         "Overwritting columns in cell.le...
R/annotate_sce.R#L 66         "' and '", existing_pseudotime_c...
R/annotate_sce.R#L 76       msg = paste("'", existing_pseudoti...
R/annotate_sce.R#L 81       msg = paste("'", existing_path_col...
R/annotate_sce.R#L 85     names(cell.meta)[names(cell.meta) ==...
R/annotate_sce.R#L 97       message(paste("Skipping overwritti...
R/as_scmp.R#L  4 #' `as_scmp()` converts a cds/CellDataSe...
R/as_scmp.R#L  7 #' @param object An S4 object of class `...
R/as_scmp.R#L 13 #' Pseudotime values. It is generated us...
R/as_scmp.R#L 16 #' for Path. It is generated using `colD...
R/as_scmp.R#L 25 #' @seealso `colData` from the \pkg{Sing...
R/as_scmp.R#L 59     all(isS4(object) & all(is(object, "c...
R/as_scmp.R#L 72       assert_that(names(additional_param...
R/as_scmp.R#L 77       assert_that(all(names(additional_p...
R/as_scmp.R#L 78         msg = "Allowed additional parame...
R/as_scmp.R#L107       existing_pseudotime_colname = addi...
R/as_scmp.R#L116       compress.sce = SingleCellExperimen...
R/as_scmp.R#L154       compress.sce = SingleCellExperimen...
R/calc_bin_size.R#L 19   # Use the 'str_split' function from th...
R/calc_bin_size.R#L 23   # Finally, 'length' is used to get the...
R/calc_bin_size.R#L 27   # Convert the 'size' variable to a num...
R/create_range.R#L  4 #' This function converts a factor colum...
R/create_range.R#L 11 #'     \item{bin}{A factor column repres...
R/create_range.R#L 29 create_range <- function(x, bin_pseudoti...
R/create_range.R#L 37   # Split the character string by comma ...
R/create_range.R#L 40   # Split the character string by comma ...
R/create_range.R#L 45       "Lower Bound:", y1, ", Upper Bound...
R/create_range.R#L 50   # Combine the lower bound, upper bound...
R/DESeq2_estimateSizeFactorsForMatrix.R#L  4 #' Love, M.I., Huber, W., Anders, S. Mod...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 25 #' @param controlGenes optional, numeric...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 57     stop("every gene contains at least o...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 69       exp(locfunc((log(cnts) - loggeomea...
R/entropy_discretize.R#L  9 #' @param scmpObject object of Class scM...
R/entropy_discretize.R#L 12 #' Pseudotime values. Generated using `c...
R/entropy_discretize.R#L 17 #' @param bin_pseudotime_colname Name of...
R/entropy_discretize.R#L 23 #' "Sqrt", "Sturges", "Rice", "Doane", a...
R/entropy_discretize.R#L 25 #' @param drop.fac A numeric value speci...
R/entropy_discretize.R#L 26 #' number of bins if the initial binning...
R/entropy_discretize.R#L 28 #' @param binning A character string. Wh...
R/entropy_discretize.R#L 29 #' per path iteratively. Options: "unive...
R/entropy_discretize.R#L 30 #' @param additional_params Pass additio...
R/entropy_discretize.R#L 42 #' - Adds a new column 'cell' to the inp...
R/entropy_discretize.R#L 43 #' - Extracts the time series data from ...
R/entropy_discretize.R#L 46 #' - Discretizes the time series data in...
R/entropy_discretize.R#L 48 #' - Removes the 'cell' column and sets ...
R/entropy_discretize.R#L 62 #' @importFrom dplyr left_join join_by m...
R/entropy_discretize.R#L 67 #' @seealso \code{\link{estBinSize}}, \c...
R/entropy_discretize.R#L 72                                pseudotim...
R/entropy_discretize.R#L 80                                bin_pseud...
R/entropy_discretize.R#L 81                                additiona...
R/entropy_discretize.R#L 96     msg = paste0("'", pseudotime_colname...
R/entropy_discretize.R#L 99     msg = paste0("'", path_colname, "' d...
R/entropy_discretize.R#L109       bin_method %in% c("Freedman.Diacon...
R/entropy_discretize.R#L111     msg = "Available binning methods are...
R/entropy_discretize.R#L132     msg = "Invalid number of paths detec...
R/entropy_discretize.R#L137     message(paste("Number of available p...
R/entropy_discretize.R#L160         message(paste("Range of Pseudoti...
R/entropy_discretize.R#L185       bin_intervals <- as.data.frame(dis...
R/entropy_discretize.R#L192       bin_table <- as.data.frame(t(as.da...
R/entropy_discretize.R#L194         bin_size_colname = bin_size_coln...
R/entropy_discretize.R#L196       colnames(bin_table) <- c(scmp_bin_...
R/entropy_discretize.R#L217       discrete.list <- lapply(avail.path...
R/entropy_discretize.R#L218                                         ...
R/entropy_discretize.R#L219                                         ...
R/entropy_discretize.R#L220                                         ...
R/entropy_discretize.R#L221                                         ...
R/entropy_discretize.R#L222                                         ...
R/entropy_discretize.R#L223                                         ...
R/entropy_discretize.R#L267         bin_intervals <- as.data.frame(d...
R/entropy_discretize.R#L272             "For", path, ",", length_n, ...
R/entropy_discretize.R#L281         bin_table <- as.data.frame(t(as....
R/estBinSize.R#L  4 #' This function calculates the optimal ...
R/estBinSize.R#L  6 #' @param time_vector A numeric vector. ...
R/estBinSize.R#L  8 #' @param drop_fac A numeric. A factor t...
R/estBinSize.R#L  9 #' @param bin_method A character string....
R/estBinSize.R#L 12 #' A numeric value representing the esti...
R/estBinSize.R#L 16 #' - "Freedman.Diaconis": bin size is pr...
R/estBinSize.R#L 17 #' - "Sqrt": bin size is proportional to...
R/estBinSize.R#L 18 #' - "Sturges": bin size is proportional...
R/estBinSize.R#L 19 #' - "Rice": bin size is proportional to...
R/estBinSize.R#L 21 #' - "Scott.Normal": bin size is proport...
R/estBinSize.R#L 23 #' After estimating the bin size, it is ...
R/estBinSize.R#L 27 #' estBinSize(time_vector = c(1, 2, 3, 4...
R/estBinSize.R#L 38       # Freedman-Diaconis rule: bin size...
R/estBinSize.R#L 39       # and inversely proportional to th...
R/estBinSize.R#L 43       # Square root rule: bin size is pr...
R/estBinSize.R#L 47       # Sturges' rule: bin size is propo...
R/estBinSize.R#L 51       # Rice Rule: bin size is proportio...
R/estBinSize.R#L 55       # Doane's formula: accounts for da...
R/estBinSize.R#L 61       # Scott's normal reference rule: a...
R/estBinSize.R#L 62       # Bin size is proportional to the ...
R/estBinSize.R#L 65     stop(paste("Invalid bin_method: ", b...
R/extract_fitting.R#L  1 extract_fitting <- function(reg, lmf, mo...
R/extract_fitting.R#L 20     if ((!(result$aic == -Inf) & !is.na(...
R/extract_fitting.R#L 24         #model.glm.0 <- glm(y ~ 1, famil...
R/extract_fitting.R#L 51             coeff[1] <- result$coefficie...
R/extract_fitting.R#L 53             p.valor[1] <- result$coeffic...
R/extract_fitting.R#L 60                 coeff[j] <- result$coeff...
R/extract_fitting.R#L 62                 p.valor[j] <- result$coe...
R/extract_fitting.R#L 64                 t[j] <- result$coefficie...
R/make.pseudobulk.counts.R#L  4 #' `make.pseudobulk.counts()` creates a ...
R/make.pseudobulk.counts.R#L  6 #' @param scmpObject object of Class scM...
R/make.pseudobulk.counts.R#L  8 #' @param bin_members_colname Name of th...
R/make.pseudobulk.counts.R#L  9 #' storing information about the members...
R/make.pseudobulk.counts.R#L 13 #' aggregate counts within each cluster....
R/make.pseudobulk.counts.R#L 14 #' @param assay_name Name of the Assay i...
R/make.pseudobulk.counts.R#L 18 #' A data.frame. The data frame includes...
R/make.pseudobulk.counts.R#L 22 #' For each bin, it identifies the cells...
R/make.pseudobulk.counts.R#L 23 #' counts from the counts data frame. It...
R/make.pseudobulk.counts.R#L 24 #' counts (depending on the specified me...
R/make.pseudobulk.counts.R#L 25 #' The result is a pseudo bulk counts da...
R/make.pseudobulk.counts.R#L 41                                    bin_m...
R/make.pseudobulk.counts.R#L 42                                    bin_c...
R/make.pseudobulk.counts.R#L 65     msg = paste0("'", bin_members_colnam...
R/make.pseudobulk.counts.R#L 92       stop("Invalid cluster_count_by val...
R/make.pseudobulk.counts.R#L105   scmpObject@compress.sce@assays@data@li...
R/make.pseudobulk.design.R#L  4 #' `make.bulk.design()` creates a pseudo...
R/make.pseudobulk.design.R#L  8 #' @param scmpObject object of Class scM...
R/make.pseudobulk.design.R#L 17 #' @param bin_members_colname Name of th...
R/make.pseudobulk.design.R#L 18 #' storing information about the members...
R/make.pseudobulk.design.R#L 19 #' @param bin_pseudotime_colname Name of...
R/make.pseudobulk.design.R#L 20 #' storing information about the binned ...
R/make.pseudobulk.design.R#L 24 #' A data.frame containing the pseudobul...
R/make.pseudobulk.design.R#L 30 #' - Columns for each path in paths.vect...
R/make.pseudobulk.design.R#L 33 #' This function operates by iterating o...
R/make.pseudobulk.design.R#L 39 #' After processing all paths, the funct...
R/make.pseudobulk.design.R#L 55                                    path_...
R/make.pseudobulk.design.R#L 56                                    bin_c...
R/make.pseudobulk.design.R#L 57                                    bin_s...
R/make.pseudobulk.design.R#L 59                                    bin_p...
R/make.pseudobulk.design.R#L 69     msg = paste0("'", bin_pseudotime_col...
R/make.pseudobulk.design.R#L 72     msg = paste0("'", path_colname, "' d...
R/make.pseudobulk.design.R#L 86     msg = "Invalid number of paths detec...
R/make.pseudobulk.design.R#L 93   # pB.list <- mclapply(avail.paths, fun...
R/make.pseudobulk.design.R#L 94   pB.list <- lapply(avail.paths, functio...
R/make.pseudobulk.design.R#L 95                                         ...
R/make.pseudobulk.design.R#L104     path.time.cell <- path.frame[order(p...
R/make.pseudobulk.design.R#L124     tmp.bin.sise <- apply(path.time.cell...
R/make.pseudobulk.design.R#L155   compressed.sce <- SingleCellExperiment...
R/sc.get.siggenes.R#L  1 #' @title Extract significant genes for ...
R/sc.get.siggenes.R#L  9 #' @param rsq Cut-off level at the R-squ...
R/sc.get.siggenes.R#L 11 #' @param vars Variables for which to ex...
R/sc.get.siggenes.R#L 13 #'   \item \code{"all"}: generates one s...
R/sc.get.siggenes.R#L 14 #'   \item \code{"each"}: generates as m...
R/sc.get.siggenes.R#L 15 #'   \item \code{"groups"}: generates a ...
R/sc.get.siggenes.R#L 17 #' @param significant.intercept Experime...
R/sc.get.siggenes.R#L 20 #' Refer to the function description for...
R/sc.get.siggenes.R#L 24 #'   \item \code{summary}: A vector or m...
R/sc.get.siggenes.R#L 25 #'   \item \code{sig.genes}: A list with...
R/sc.get.siggenes.R#L 29 #'       \item{\code{coefficients}:}{Reg...
R/sc.get.siggenes.R#L 30 #'       \item{\code{group.coeffs}:}{Reg...
R/sc.get.siggenes.R#L 31 #'       \item{\code{sig.pvalues}:}{P-va...
R/sc.get.siggenes.R#L 39 #' maSigPro: a Method to Identify Signif...
R/sc.get.siggenes.R#L 40 #' Bioinformatics, 22(9), 1096-1102. \ur...
R/sc.get.siggenes.R#L 71     sig.genes.s3 <- get.siggenes(tstep, ...
R/sc.make.design.matrix.R#L  3 #' This function creates a design matrix...
R/sc.make.design.matrix.R#L  4 #' It generates an 'edesignClass' object...
R/sc.make.design.matrix.R#L 21                                   bin_ps...
R/sc.make.design.matrix.R#L 22                                   path_c...
R/sc.make.design.matrix.R#L 33     msg = paste0("'", bin_pseudotime_col...
R/sc.make.design.matrix.R#L 41   com.cell.meta <- comp.cell.metadata[, ...
R/sc.make.design.matrix.R#L 52   com.cell.meta <- com.cell.meta[, colna...
R/sc.make.design.matrix.R#L 55   col.vec <- colnames(com.cell.meta)[col...
R/sc.p.vector.class.R#L  1 #' A class to store regression fit resul...
R/sc.p.vector.class.R#L  3 #' The scPVectorClass is designed to hol...
R/sc.p.vector.class.R#L  4 #' It contains slots to store various re...
R/sc.p.vector.class.R#L  5 #' number of input genes, number of gene...
R/sc.p.vector.class.R#L  6 #' microarray experiments and identifyin...
R/sc.p.vector.class.R#L 11 #' @slot FDR P-value at FDR \code{Q} con...
R/sc.p.vector.class.R#L 27 #' ## one control plus 3 treatments, 3 t...
R/sc.p.vector.class.R#L 40     SELEC = "dgCMatrix", # Matrix contai...
R/sc.p.vector.class.R#L 43     FDR = "numeric", # P-value at FDR Q ...
R/sc.p.vector.class.R#L 87     SELEC = as(matrix(NA, nrow = 0, ncol...
R/sc.p.vector.R#L  3 #' \code{sc.p.vector} performs a regress...
R/sc.p.vector.R#L  6 #' @param scmpObj matrix containing norm...
R/sc.p.vector.R#L  8 #' @param MT.adjust argument to pass to ...
R/sc.p.vector.R#L  9 #' @param min.obs genes with less than t...
R/sc.p.vector.R#L 10 #'   Minimum value to estimate the model...
R/sc.p.vector.R#L 12 #'   It must be specified as a function:...
R/sc.p.vector.R#L 13 #'   If NULL, the family will be \code{n...
R/sc.p.vector.R#L 14 #' @param epsilon argument to pass to \c...
R/sc.p.vector.R#L 15 #' @param verbose Name of the analyzed i...
R/sc.p.vector.R#L 19 #' @details \code{rownames(design)} and ...
R/sc.p.vector.R#L 20 #'   and indicate array naming. \code{ro...
R/sc.p.vector.R#L 21 #'   \code{colnames(design)} are the giv...
R/sc.p.vector.R#L 28 #' \item{FDR}{p-value at FDR \code{Q} co...
R/sc.p.vector.R#L 35 #' maSigPro: a Method to Identify Signif...
R/sc.p.vector.R#L 45 #' ## one control plus 3 treatments, 3 t...
R/sc.p.vector.R#L 57                         family = MASS::n...
R/sc.p.vector.R#L 69   # Convert 'scmpObj' to matrix and sele...
R/sc.p.vector.R#L 79   assert_that((dat@Dim[1] > 1), msg = pa...
R/sc.p.vector.R#L 83   #     message(paste("After filtering w...
R/sc.p.vector.R#L111       message("Please cite DESeq2 as 'Lo...
R/sc.p.vector.R#L126   p.vector.list <- mclapply(1:g, functio...
R/sc.p.vector.R#L170   p.adjusted <- unlist(p.adjust(sc.p.vec...
R/sc.path.intersection.R#L  3 #' This function takes a Single Cell Mul...
R/sc.path.intersection.R#L  4 #' significant genes for each pathway, a...
R/sc.path.intersection.R#L  6 #' @param scmpObj An object of class SCM...
R/sc.path.intersection.R#L  9 #' @return An UpSet plot visualizing the...
R/sc.path.intersection.R#L 13 #' # Assuming 'scmp_object' is a pre-pro...
R/sc.plot.bins.R#L  3 #' This function generates plots to visu...
R/sc.plot.bins.R#L  4 #' It produces a bar plot and, optionall...
R/sc.plot.bins.R#L  7 #' @param scmpObj A SingleCellExperiment...
R/sc.plot.bins.R#L  8 #' @param add_tile A logical flag indica...
R/sc.plot.bins.R#L 12 #' @return A bar plot and, optionally, a...
R/sc.plot.bins.R#L 13 #' If add_tile is TRUE, returns a combin...
R/sc.plot.bins.R#L 17 # sc.plot.bins <- function(scmpObj, add_...
R/sc.plot.bins.R#L 18 #                          tile.title = ...
R/sc.plot.bins.R#L 22 #   conesa_colors <- getConesaColors()[c...
R/sc.plot.bins.R#L 28 #     geom_line(aes(group = path, color ...
R/sc.PlotGroups.R#L  3 #' This function generates plots based o...
R/sc.PlotGroups.R#L 55       path.names <- unique(scmpObj@compr...
R/sc.PlotGroups.R#L 62           pooled.time = scmpObj@edesign@...
R/sc.PlotGroups.R#L 80           time <- scmpObj@edesign@edesig...
R/sc.PlotGroups.R#L100       xlim <- c(min(points.df[["pooled.t...
R/sc.PlotGroups.R#L101       ylim <- c(min(as.numeric(points.df...
R/sc.PlotGroups.R#L105       conesa_colors <- getConesaColors()...
R/sc.PlotGroups.R#L109           geom_point(data = points.df, a...
R/sc.PlotGroups.R#L110           geom_line(data = points.df, ae...
R/sc.PlotGroups.R#L111           geom_line(data = curve.df, aes...
R/sc.PlotGroups.R#L113                #   subtitle = paste("R2:...
R/sc.PlotGroups.R#L120               panel.grid.major = element...
R/sc.PlotGroups.R#L123           scale_x_continuous(breaks = se...
R/sc.stepback.R#L  1 sc.stepback <- function(y = y, d = d, al...
R/sc.stepback.R#L  2   lm1 <- glm(y ~ ., data = d, family = f...
R/sc.stepback.R#L 20       lastname <- names(result$coefficie...
R/sc.stepback.R#L 26     lm1 <- glm(y ~ ., data = d, family =...
R/sc.stepback.R#L 33         lm1 <- glm(y ~ 1, family = famil...
R/sc.stepfor.R#L  1 sc.stepfor <- function(y = y, d = d, alf...
R/sc.stepfor.R#L  5   resul0 <- summary(glm(y ~ ., data = d,...
R/sc.stepfor.R#L 10     lm2 <- glm(y ~ ., data = sub, family...
R/sc.stepfor.R#L 38         lm2 <- glm(y ~ ., data = sub, fa...
R/sc.stepfor.R#L 50     lm1 <- glm(y ~ ., data = design, fam...
R/sc.T.fit.R#L  3 #' \code{T.fit} selects the best regress...
R/sc.T.fit.R#L  5 #' @param scmpObj Can either be a \code{...
R/sc.T.fit.R#L  7 #' @param step.method Argument to be pas...
R/sc.T.fit.R#L  8 #' @param Q Significance level used for ...
R/sc.T.fit.R#L  9 #' @param nvar.correction Argument for c...
R/sc.T.fit.R#L 10 #' @param family The distribution functi...
R/sc.T.fit.R#L 11 #' @param epsilon Argument to pass to \c...
R/sc.T.fit.R#L 12 #' @param verbose Name of the analyzed i...
R/sc.T.fit.R#L 17 #' In the maSigPro approach, \code{\link...
R/sc.T.fit.R#L 18 #' first selected based on a general mod...
R/sc.T.fit.R#L 20 #' The step regression can be \code{"bac...
R/sc.T.fit.R#L 21 #' model with all or none variables. Wit...
R/sc.T.fit.R#L 22 #' At each step, the p-value of each var...
R/sc.T.fit.R#L 23 #' lower or higher than the given thresh...
R/sc.T.fit.R#L 27 #' \item{sol}{Matrix for summary results...
R/sc.T.fit.R#L 33 #' \item{coefficients}{Matrix containing...
R/sc.T.fit.R#L 34 #' \item{group.coeffs}{Matrix containing...
R/sc.T.fit.R#L 45 #' maSigPro: a Method to Identify Signif...
R/sc.T.fit.R#L 75   groups.vector <- c(groups.vector[nchar...
R/sc.T.fit.R#L127     #result_list <- parallel::mclapply(n...
R/sc.T.fit.R#L128        result_list <- lapply(names(y_inp...
R/sc.T.fit.R#L130       reg_scmpObj <- sc.stepback(y = y, ...
R/sc.T.fit.R#L131       lmf_scmpObj <- glm(y ~ ., data = a...
R/sc.T.fit.R#L132       model.glm.0_scmpObj <- glm(y ~ 1, ...
R/sc.T.fit.R#L141       return(extract_fitting(reg = reg_s...
R/sc.T.fit.R#L150       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L152           reg_scmpObj <- sc.stepfor(y = ...
R/sc.T.fit.R#L153           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L154           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L163           return(extract_fitting(reg = r...
R/sc.T.fit.R#L166       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L168           reg_scmpObj <- sc.two.ways.ste...
R/sc.T.fit.R#L169           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L170           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L179           return(extract_fitting(reg = r...
R/sc.T.fit.R#L183       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L185           reg_scmpObj <- sc.two.ways.ste...
R/sc.T.fit.R#L186           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L187           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L196           return(extract_fitting(reg = r...
R/sc.T.fit.R#L199     stop("stepwise method must be one of...
R/sc.T.fit.R#L223   influ.info.list <- influ.info.list[!sa...
R/sc.T.fit.R#L265           B <- reg.coeffs(coefficients =...
R/sc.T.fit.R#L280     message(paste("\nInfluence:", ncol(i...
R/sc.two.ways.stepback.R#L  2   function(y = y, d = d, alfa = 0.05, fa...
R/sc.two.ways.stepback.R#L  4     lm1 <- glm(y ~ ., data = d, family =...
R/sc.two.ways.stepback.R#L 28         lm2 <- glm(y ~ ., data = sub, fa...
R/sc.two.ways.stepback.R#L 57           lm2 <- glm(y ~ ., data = sub, ...
R/sc.two.ways.stepback.R#L 71       lm1 <- glm(y ~ ., data = d, family...
R/sc.two.ways.stepback.R#L 78           lm1 <- glm(y ~ 1, family = fam...
R/sc.two.ways.stepfor.R#L  2   function(y = y, d = d, alfa = 0.05, fa...
R/sc.two.ways.stepfor.R#L  6     resul0 <- summary(glm(y ~ ., data = ...
R/sc.two.ways.stepfor.R#L 11       lm2 <- glm(y ~ ., data = sub, fami...
R/sc.two.ways.stepfor.R#L 32       result2 <- summary(glm(y ~ ., data...
R/sc.two.ways.stepfor.R#L 52         result2 <- summary(glm(y ~ ., da...
R/sc.two.ways.stepfor.R#L 63         lm2 <- glm(y ~ ., data = sub, fa...
R/sc.two.ways.stepfor.R#L 80       lm1 <- glm(y ~ ., data = design, f...
R/scmpClass.R#L  6 #' @slot sce Object of Class SingleCellE...
R/scmpClass.R#L  7 #' @slot scPVector Object of Class scPVe...
R/scmpClass.R#L  8 #' @slot scTFit Object of Class scTFitCl...
R/scmpClass.R#L 10 #' @slot edesign Object of Class edesign...
R/scmpClass.R#L 11 #' @slot addParams Object of Class addPa...
R/scmpClass.R#L 88     scPVector = new("scPVectorClass"), #...
R/scmpClass.R#L 89     scTFit = new("scTFitClass"), # Assum...
R/scmpClass.R#L 90     addParams = new("addParamClass"), # ...
R/scmpClass.R#L 96 scMaSigProClass <- function(sce = new("S...
R/scmpShow.R#L  3 #' This method displays basic informatio...
R/scmpShow.R#L  4 #' is printed in the console. The method...
R/scmpShow.R#L 18   cat("Pseudotime Range:", paste(range(c...
R/scmpShow.R#L 23     cat(paste("\nPaths:", paste(levels(a...
R/scmpShow.R#L 25       "\nBinned Pseudotime: ", paste(ran...
R/scmpShow.R#L 26       round(mean(compressed.cell.metadat...
R/scmpShow.R#L 30     per_path_num_bin <- extract_info(com...
R/scmpShow.R#L 31     per_path_bin_size <- round(extract_i...
R/scmpShow.R#L 34     cat("\nAverage bin Size->", paste(na...
R/scmpShow.R#L 35     cat("\nNumber of bins->", paste(name...
R/scmpShow.R#L 41     nSigs <- length(object@scPVector@p.a...
R/scmpShow.R#L 56 extract_info <- function(data, return_ty...
R/scTFitClass.R#L 12 #' @slot coefficients A data frame conta...
R/scTFitClass.R#L 13 #' @slot group.coeffs A matrix with the ...
R/scTFitClass.R#L 14 #' @slot t.score A data frame containing...
R/scTFitClass.R#L 15 #' @slot variables A character vector co...
R/showCoeff.R#L  3 #' This function is used to view or retu...
R/showCoeff.R#L  5 #' @param scmpObj an object of class 'sc...
R/showCoeff.R#L  6 #' @param view logical, whether to view ...
R/showCoeff.R#L  7 #' @param return logical, whether to ret...
R/showSigProf.R#L  3 #' This function is used to view or retu...
R/showSigProf.R#L  5 #' @param scmpObj an object of class 'sc...
R/showSigProf.R#L  6 #' @param view logical, whether to view ...
R/showSigProf.R#L  7 #' @param return logical, whether to ret...
R/showSigProf.R#L 35     bulk.counts <- bulk.counts[rownames(...
R/Sim2Path.R#L  4 #' A small simulated SingleCellExperimen...
R/Sim2Path.R#L  5 #' contains 200 cells and 500 genes. The...
R/solShow.R#L  3 #' This function is used to view or retu...
R/solShow.R#L  5 #' @param scmpObj an object of class 'sc...
R/solShow.R#L  6 #' @param view logical, whether to view ...
R/solShow.R#L  7 #' @param return logical, whether to ret...
man/addParamClass-class.Rd#L 14 \item{\code{bin_pseudotime_colname}}{A c...
man/addParamClass-class.Rd#L 16 \item{\code{path_prefix}}{A character re...
man/addParamClass-class.Rd#L 18 \item{\code{root_label}}{A character rep...
man/addParamClass-class.Rd#L 20 \item{\code{pseudotime_colname}}{A chara...
man/addParamClass-class.Rd#L 24 \item{\code{bin_method}}{A character rep...
man/addParamClass-class.Rd#L 26 \item{\code{path_colname}}{A character r...
man/addParamClass-class.Rd#L 28 \item{\code{bin_colname}}{A character re...
man/addParamClass-class.Rd#L 30 \item{\code{bin_size_colname}}{A charact...
man/addParamClass-class.Rd#L 32 \item{\code{bin_members_colname}}{A char...
man/addParamClass-class.Rd#L 36 \item{\code{min.obs}}{Minimum value to e...
man/addParamClass-class.Rd#L 44 \item{\code{step.method}}{A character sp...
man/annotate_monocle3_cds.Rd#L 41 `annotate_monocle3_cds()` annotates the ...
man/annotate_monocle3_cds.Rd#L 65 \code{\link[monocle3]{principal_graph_au...
man/annotate_monocle3_cds.Rd#L 66 \code{\link[igraph]{shortest_paths}}, `c...
man/annotate_sce.Rd#L  5 \title{Annotate 'SingleCellExperiment' c...
man/annotate_sce.Rd#L 67 SingleCellExperiment class object, `colD...
man/as_scmp.Rd#L 19 \item{object}{An S4 object of class `cds...
man/as_scmp.Rd#L 29 Pseudotime values. It is generated using...
man/as_scmp.Rd#L 33 for Path. It is generated using `colData...
man/as_scmp.Rd#L 44 `as_scmp()` converts a cds/CellDataSet o...
man/create_range.Rd#L 18   \item{bin}{A factor column representin...
man/dot-smsp_show.Rd#L 13 This method displays basic information a...
man/dot-smsp_show.Rd#L 14 is printed in the console. The method is...
man/entropy_discretize.Rd#L 35 "Sqrt", "Sturges", "Rice", "Doane", and ...
man/entropy_discretize.Rd#L 39 number of bins if the initial binning re...
man/entropy_discretize.Rd#L 43 \item{binning}{A character string. When ...
man/entropy_discretize.Rd#L 44 per path iteratively. Options: "universa...
man/entropy_discretize.Rd#L 50 \item{bin_pseudotime_colname}{Name of th...
man/entropy_discretize.Rd#L 53 \item{additional_params}{Pass additional...
man/entropy_discretize.Rd#L 72 - Extracts the time series data from the...
man/entropy_discretize.Rd#L 75 - Discretizes the time series data into ...
man/entropy_discretize.Rd#L 77 - Removes the 'cell' column and sets the...
man/estBinSize.Rd#L 10 \item{time_vector}{A numeric vector. The...
man/estBinSize.Rd#L 14 \item{drop_fac}{A numeric. A factor to a...
man/estBinSize.Rd#L 16 \item{bin_method}{A character string. Th...
man/estBinSize.Rd#L 22 This function calculates the optimal bin...
man/estBinSize.Rd#L 26 - "Freedman.Diaconis": bin size is propo...
man/estBinSize.Rd#L 27 - "Sqrt": bin size is proportional to th...
man/estBinSize.Rd#L 28 - "Sturges": bin size is proportional to...
man/estBinSize.Rd#L 29 - "Rice": bin size is proportional to tw...
man/estBinSize.Rd#L 31 - "Scott.Normal": bin size is proportion...
man/estBinSize.Rd#L 33 After estimating the bin size, it is sca...
man/estBinSize.Rd#L 37 estBinSize(time_vector = c(1, 2, 3, 4, 5...
man/make.pseudobulk.counts.Rd#L 20 storing information about the members of...
man/make.pseudobulk.counts.Rd#L 25 \item{assay_name}{Name of the Assay in t...
man/make.pseudobulk.counts.Rd#L 29 aggregate counts within each cluster. Av...
man/make.pseudobulk.counts.Rd#L 32 A data.frame. The data frame includes ps...
man/make.pseudobulk.counts.Rd#L 35 `make.pseudobulk.counts()` creates a dat...
man/make.pseudobulk.counts.Rd#L 41 counts (depending on the specified metho...
man/make.pseudobulk.counts.Rd#L 42 The result is a pseudo bulk counts data ...
man/make.pseudobulk.design.Rd#L 32 storing information about the members of...
man/make.pseudobulk.design.Rd#L 34 \item{bin_pseudotime_colname}{Name of th...
man/make.pseudobulk.design.Rd#L 35 storing information about the binned pse...
man/make.pseudobulk.design.Rd#L 40 A data.frame containing the pseudobulk p...
man/make.pseudobulk.design.Rd#L 46 - Columns for each path in paths.vector,...
man/make.pseudobulk.design.Rd#L 49 `make.bulk.design()` creates a pseudobul...
man/make.pseudobulk.design.Rd#L 60 After processing all paths, the function...
man/sc.get.siggenes.Rd#L  5 \title{Extract significant genes for set...
man/sc.get.siggenes.Rd#L 21 \item{vars}{Variables for which to extra...
man/sc.get.siggenes.Rd#L 23   \item \code{"all"}: generates one sing...
man/sc.get.siggenes.Rd#L 24   \item \code{"each"}: generates as many...
man/sc.get.siggenes.Rd#L 25   \item \code{"groups"}: generates a sig...
man/sc.get.siggenes.Rd#L 28 \item{significant.intercept}{Experimenta...
man/sc.get.siggenes.Rd#L 33   \item \code{summary}: A vector or matr...
man/sc.get.siggenes.Rd#L 34   \item \code{sig.genes}: A list with de...
man/sc.get.siggenes.Rd#L 38       \item{\code{coefficients}:}{Regres...
man/sc.get.siggenes.Rd#L 39       \item{\code{group.coeffs}:}{Regres...
man/sc.get.siggenes.Rd#L 40       \item{\code{sig.pvalues}:}{P-value...
man/sc.get.siggenes.Rd#L 59 maSigPro: a Method to Identify Significa...
man/sc.get.siggenes.Rd#L 60 Bioinformatics, 22(9), 1096-1102. \url{h...
man/sc.make.design.matrix.Rd#L 27 This function creates a design matrix us...
man/sc.make.design.matrix.Rd#L 28 It generates an 'edesignClass' object wh...
man/sc.p.vector.Rd#L 20 \item{scmpObj}{matrix containing normali...
man/sc.p.vector.Rd#L 24 \item{MT.adjust}{argument to pass to \co...
man/sc.p.vector.Rd#L 26 \item{min.obs}{genes with less than this...
man/sc.p.vector.Rd#L 30 It must be specified as a function: \cod...
man/sc.p.vector.Rd#L 31 If NULL, the family will be \code{negati...
man/sc.p.vector.Rd#L 33 \item{epsilon}{argument to pass to \code...
man/sc.p.vector.Rd#L 35 \item{verbose}{Name of the analyzed item...
man/sc.p.vector.Rd#L 47 \item{FDR}{p-value at FDR \code{Q} contr...
man/sc.p.vector.Rd#L 54 \code{sc.p.vector} performs a regression...
man/sc.p.vector.Rd#L 59   and indicate array naming. \code{rowna...
man/sc.p.vector.Rd#L 60   \code{colnames(design)} are the given ...
man/sc.p.vector.Rd#L 72 maSigPro: a Method to Identify Significa...
man/sc.path.intersection.Rd#L 10 \item{scmpObj}{An object of class SCMP, ...
man/sc.path.intersection.Rd#L 14 An UpSet plot visualizing the intersecti...
man/sc.path.intersection.Rd#L 17 This function takes a Single Cell MultiP...
man/sc.path.intersection.Rd#L 18 significant genes for each pathway, and ...
man/sc.path.intersection.Rd#L 22 # Assuming 'scmp_object' is a pre-proces...
man/sc.PlotGroups.Rd#L 30 This function generates plots based on v...
man/sc.T.fit.Rd#L  5 \title{Makes a stepwise regression fit f...
man/sc.T.fit.Rd#L 20 \item{scmpObj}{Can either be a \code{\li...
man/sc.T.fit.Rd#L 23 \item{step.method}{Argument to be passed...
man/sc.T.fit.Rd#L 25 \item{Q}{Significance level used for var...
man/sc.T.fit.Rd#L 27 \item{nvar.correction}{Argument for corr...
man/sc.T.fit.Rd#L 29 \item{family}{The distribution function ...
man/sc.T.fit.Rd#L 31 \item{epsilon}{Argument to pass to \code...
man/sc.T.fit.Rd#L 35 \item{verbose}{Name of the analyzed item...
man/sc.T.fit.Rd#L 41 \item{sol}{Matrix for summary results of...
man/sc.T.fit.Rd#L 47 \item{coefficients}{Matrix containing re...
man/sc.T.fit.Rd#L 48 \item{group.coeffs}{Matrix containing th...
man/sc.T.fit.Rd#L 59 \code{T.fit} selects the best regression...
man/sc.T.fit.Rd#L 62 In the maSigPro approach, \code{\link{p....
man/sc.T.fit.Rd#L 63 first selected based on a general model,...
man/sc.T.fit.Rd#L 65 The step regression can be \code{"backwa...
man/sc.T.fit.Rd#L 66 model with all or none variables. With t...
man/sc.T.fit.Rd#L 67 At each step, the p-value of each variab...
man/sc.T.fit.Rd#L 68 lower or higher than the given threshold...
man/sc.T.fit.Rd#L 72 maSigPro: a Method to Identify Significa...
man/scMaSigProClass-class.Rd#L 15 \item{\code{sce}}{Object of Class Single...
man/scMaSigProClass-class.Rd#L 17 \item{\code{scPVector}}{Object of Class ...
man/scMaSigProClass-class.Rd#L 19 \item{\code{scTFit}}{Object of Class scT...
man/scMaSigProClass-class.Rd#L 23 \item{\code{edesign}}{Object of Class ed...
man/scMaSigProClass-class.Rd#L 25 \item{\code{addParams}}{Object of Class ...
man/scMaSigProClass-class.Rd#L 29 \item{\code{distribution}}{The distribut...
man/scmp_estimateSizeFactorsForMatrix.Rd#L 28 \item{controlGenes}{optional, numeric or...
man/scmp_estimateSizeFactorsForMatrix.Rd#L 48 Love, M.I., Huber, W., Anders, S. Modera...
man/scPVectorClass-class.Rd#L  7 \title{A class to store regression fit r...
man/scPVectorClass-class.Rd#L  9 The scPVectorClass is designed to hold t...
man/scPVectorClass-class.Rd#L 10 It contains slots to store various resul...
man/scPVectorClass-class.Rd#L 11 number of input genes, number of genes t...
man/scPVectorClass-class.Rd#L 12 microarray experiments and identifying s...
man/scPVectorClass-class.Rd#L 17 \item{\code{SELEC}}{dgCMatrix containing...
man/scPVectorClass-class.Rd#L 23 \item{\code{FDR}}{P-value at FDR \code{Q...
man/scPVectorClass-class.Rd#L 29 \item{\code{family}}{Distribution functi...
man/scTFitClass-class.Rd#L 22 \item{\code{coefficients}}{A data frame ...
man/scTFitClass-class.Rd#L 24 \item{\code{group.coeffs}}{A matrix with...
man/scTFitClass-class.Rd#L 26 \item{\code{t.score}}{A data frame conta...
man/scTFitClass-class.Rd#L 28 \item{\code{variables}}{A character vect...
man/showCoeff.Rd#L 10 \item{scmpObj}{an object of class 'scMaS...
man/showCoeff.Rd#L 12 \item{view}{logical, whether to view the...
man/showCoeff.Rd#L 14 \item{return}{logical, whether to return...
man/showCoeff.Rd#L 21 This function is used to view or return ...
man/showSigProf.Rd#L 10 \item{scmpObj}{an object of class 'scMaS...
man/showSigProf.Rd#L 12 \item{view}{logical, whether to view the...
man/showSigProf.Rd#L 14 \item{return}{logical, whether to return...
man/showSigProf.Rd#L 21 This function is used to view or return ...
man/showSol.Rd#L 10 \item{scmpObj}{an object of class 'scMaS...
man/showSol.Rd#L 12 \item{view}{logical, whether to view the...
man/showSol.Rd#L 14 \item{return}{logical, whether to return...
man/showSol.Rd#L 21 This function is used to view or return ...
man/sim.sce.Rd#L 17 A small simulated SingleCellExperiment O...
* NOTE: Consider multiples of 4 spaces for line indents; 1247 lines (27%) are not.
First few lines:
R/addParamClass.R#L 28   "addParamClass",...
R/addParamClass.R#L 29   representation(...
R/addParamClass.R#L 46   ),...
R/addParamClass.R#L 47   validity = function(object) {...
R/addParamClass.R#L 52       "bin_pseudotime_colname", "path_pr...
R/addParamClass.R#L 53       "pseudotime_colname", "binning", "...
R/addParamClass.R#L 54       "path_colname", "bin_colname", "bi...
R/addParamClass.R#L 55       "bin_members_colname", "MT.adjust"...
R/addParamClass.R#L 59       slot_value <- slot(object, slot_na...
R/addParamClass.R#L 60       if (length(slot_value) == 0 || !is...
R/addParamClass.R#L 62       }...
R/addParamClass.R#L 67       stop("Slot 'g' must be an integer....
R/addParamClass.R#L 73       stop("Slot 'Q' must be numeric.")...
R/addParamClass.R#L 77       stop("Slot 'epsilon' must be numer...
R/addParamClass.R#L 82       stop("Slot 'min.obs' must be an in...
R/addParamClass.R#L 87       slot_value <- slot(object, slot_na...
R/addParamClass.R#L 88       if (length(slot_value) > 1) { # Co...
R/addParamClass.R#L 90       }...
R/addParamClass.R#L 94   },...
R/addParamClass.R#L 95   prototype = list(...
R/addParamClass.R#L112   )...
R/annotate_monocle3_cds.R#L 56                                   path_p...
R/annotate_monocle3_cds.R#L 57                                   root_l...
R/annotate_monocle3_cds.R#L 58                                   pseudo...
R/annotate_monocle3_cds.R#L 59                                   path_c...
R/annotate_monocle3_cds.R#L 60                                   verbos...
R/annotate_monocle3_cds.R#L 61   # Convert the reduction method to uppe...
R/annotate_monocle3_cds.R#L 62   reduction_method <- toupper(reduction_...
R/annotate_monocle3_cds.R#L 64   # Extract principal points and convert...
R/annotate_monocle3_cds.R#L 65   y_to_cells.df <- principal_graph_aux(c...
R/annotate_monocle3_cds.R#L 68   # Add a new column 'barcode' with the ...
R/annotate_monocle3_cds.R#L 69   y_to_cells <- y_to_cells.df %>%...
R/annotate_monocle3_cds.R#L 73   # Extract the root cells...
R/annotate_monocle3_cds.R#L 74   root <- cds@principal_graph_aux[[reduc...
R/annotate_monocle3_cds.R#L 76   # Print the identified root points, if...
R/annotate_monocle3_cds.R#L 77   if (verbose) {...
R/annotate_monocle3_cds.R#L 79   }...
R/annotate_monocle3_cds.R#L 81   # Extract the minimum spanning tree...
R/annotate_monocle3_cds.R#L 82   mst <- principal_graph(cds)[[reduction...
R/annotate_monocle3_cds.R#L 84   # Get the endpoint nodes (degree 1 nod...
R/annotate_monocle3_cds.R#L 85   endpoints <- names(which(degree(mst) =...
R/annotate_monocle3_cds.R#L 86   endpoints <- endpoints[!endpoints %in%...
R/annotate_monocle3_cds.R#L 88   # Verbose...
R/annotate_monocle3_cds.R#L 89   if (verbose) {...
R/annotate_monocle3_cds.R#L 92   }...
R/annotate_monocle3_cds.R#L 94   # Generate the network matrix...
R/annotate_monocle3_cds.R#L 95   cellWeights <- lapply(endpoints, funct...
R/annotate_monocle3_cds.R#L 98       shortest_paths(mst, root, endpoint...
R/annotate_monocle3_cds.R#L110   }) %>%...
R/annotate_monocle3_cds.R#L113   rownames(cellWeights) <- colnames(cds)...
R/annotate_monocle3_cds.R#L115   # Get pseudotime for each path...
R/annotate_monocle3_cds.R#L116   pseudotime.path.frame <- matrix(pseudo...
R/annotate_monocle3_cds.R#L119   )...
R/annotate_monocle3_cds.R#L121   # Get the number of cells for each pat...
R/annotate_monocle3_cds.R#L122   num.cells.per.path <- apply(cellWeight...
R/annotate_monocle3_cds.R#L124   }) %>% as.data.frame()...
R/annotate_monocle3_cds.R#L125   colnames(num.cells.per.path) <- "nCell...
R/annotate_monocle3_cds.R#L126   num.cells.per.path$endpoint <- rowname...
R/annotate_monocle3_cds.R#L128   # Print longest and shortest paths, if...
R/annotate_monocle3_cds.R#L129   if (verbose) {...
R/annotate_monocle3_cds.R#L134   }...
R/annotate_monocle3_cds.R#L136   # Update the cell dataset with the end...
R/annotate_monocle3_cds.R#L137   endpoints <- colnames(cellWeights)...
R/annotate_monocle3_cds.R#L139   # Extract cell metadata...
R/annotate_monocle3_cds.R#L140   cell.meta <- as.data.frame(colData(cds...
R/annotate_monocle3_cds.R#L142   # Get the lineage path names...
R/annotate_monocle3_cds.R#L143   path_names <- colnames(cellWeights)...
R/annotate_monocle3_cds.R#L145   # Add the lineage path to each cell me...
R/annotate_monocle3_cds.R#L146   cell.meta$PrincipalPoints <- apply(cel...
R/annotate_monocle3_cds.R#L149   })...
R/annotate_monocle3_cds.R#L151   # Mark the root cells in the cell meta...
R/annotate_monocle3_cds.R#L152   cell.meta[rownames(cell.meta) %in% c(r...
R/annotate_monocle3_cds.R#L154   # Add pseudotime to the cell metadata...
R/annotate_monocle3_cds.R#L155   if (all(apply(pseudotime.path.frame, 1...
R/annotate_monocle3_cds.R#L158       message("Universal Pseudotime Dete...
R/annotate_monocle3_cds.R#L160   } else {...
R/annotate_monocle3_cds.R#L162   }...
R/annotate_monocle3_cds.R#L164   # Add path information...
R/annotate_monocle3_cds.R#L165   cell.meta[[path_colname]] <- convert_t...
R/annotate_monocle3_cds.R#L168   )...
R/annotate_monocle3_cds.R#L170   # Update cell dataset with the updated...
R/annotate_monocle3_cds.R#L171   cds@colData <- DataFrame(cell.meta)...
R/annotate_monocle3_cds.R#L173   # Return a list with updated cell data...
R/annotate_monocle3_cds.R#L174   return(cds)...
R/annotate_sce.R#L 47                          pseudotime_coln...
R/annotate_sce.R#L 48                          path_prefix = "...
R/annotate_sce.R#L 49                          root_label = "r...
R/annotate_sce.R#L 50                          path_colname = ...
R/annotate_sce.R#L 51                          existing_pseudo...
R/annotate_sce.R#L 52                          existing_path_c...
R/annotate_sce.R#L 53                          labels_exist = ...
R/annotate_sce.R#L 54                          verbose = TRUE)...
R/annotate_sce.R#L 55   # Overwite the columns...
R/annotate_sce.R#L 56   if (labels_exist) {...
R/annotate_sce.R#L 58       all(!is.null(existing_pseudotime_c...
R/annotate_sce.R#L 59       msg = paste("Requested to set 'pat...
R/annotate_sce.R#L 60                   'existing_pseudotime_c...
R/annotate_sce.R#L 64       message(paste0(...
R/annotate_sce.R#L 67       ))...
R/annotate_sce.R#L 75       all(existing_pseudotime_colname %i...
R/annotate_sce.R#L 76       msg = paste("'", existing_pseudoti...
R/annotate_sce.R#L 80       all(existing_path_colname %in% col...
R/annotate_sce.R#L 81       msg = paste("'", existing_path_col...
R/annotate_sce.R#L 95   } else {...
R/annotate_sce.R#L 97       message(paste("Skipping overwritti...
R/annotate_sce.R#L101   }...
R/as_scmp.R#L 51   # Check Conversion Type...
R/as_scmp.R#L 52   assert_that(from %in% c("cds", "sce"),...
R/as_scmp.R#L 55   )...
R/as_scmp.R#L 57   # Validate S4...
R/as_scmp.R#L 58   assert_that(...
R/as_scmp.R#L 62   )...
R/as_scmp.R#L 64   # Check and validate additional parame...
R/as_scmp.R#L 65   if (!is.null(additional_params)) {...
R/as_scmp.R#L 67       msg = "Please provide 'additional_...
R/as_scmp.R#L 68       See details for more information"...
R/as_scmp.R#L 72       assert_that(names(additional_param...
R/as_scmp.R#L 75       )...
R/as_scmp.R#L 77       assert_that(all(names(additional_p...
R/as_scmp.R#L 79                   'existing_path_colname...
R/as_scmp.R#L 80       )...
R/as_scmp.R#L 82   } else {...
R/as_scmp.R#L 85       additional_params <- list(reductio...
R/as_scmp.R#L 87       additional_params <- list(...
R/as_scmp.R#L 91       )...
R/as_scmp.R#L 93   }...
R/as_scmp.R#L 95   # if 'sce' is selected...
R/as_scmp.R#L 96   if (is(object)[1] == "SingleCellExperi...
R/as_scmp.R#L 98       message("Supplied object: SingleCe...
R/as_scmp.R#L102       sce = object,...
R/as_scmp.R#L103       pseudotime_colname = pseudotime_co...
R/as_scmp.R#L104       path_prefix = path_prefix,...
R/as_scmp.R#L105       root_label = root_label,...
R/as_scmp.R#L106       path_colname = path_colname,...
R/as_scmp.R#L107       existing_pseudotime_colname = addi...
R/as_scmp.R#L108       existing_path_colname = additional...
R/as_scmp.R#L109       labels_exist = additional_params[[...
R/as_scmp.R#L110       verbose = verbose...
R/as_scmp.R#L115       sce = annotated_sce,...
R/as_scmp.R#L116       compress.sce = SingleCellExperimen...
R/as_scmp.R#L126       print(scmpObj)...
R/as_scmp.R#L131   } else if (is(object)[1] == "cell_data...
R/as_scmp.R#L133       message("Supplied object: cell_dat...
R/as_scmp.R#L138       additional_params[["reduction_meth...
R/as_scmp.R#L143       reduction_method = additional_para...
R/as_scmp.R#L144       path_prefix = path_prefix,...
R/as_scmp.R#L145       root_label = root_label,...
R/as_scmp.R#L146       path_colname = path_colname,...
R/as_scmp.R#L147       pseudotime_colname = pseudotime_co...
R/as_scmp.R#L148       verbose = verbose...
R/as_scmp.R#L153       sce = annotated_cds,...
R/as_scmp.R#L154       compress.sce = SingleCellExperimen...
R/as_scmp.R#L165       print(scmpObj)...
R/as_scmp.R#L168   }...
R/calc_bin_size.R#L 19   # Use the 'str_split' function from th...
R/calc_bin_size.R#L 20   # of the input data frame 'x' by the '...
R/calc_bin_size.R#L 21   # This returns a list where each eleme...
R/calc_bin_size.R#L 22   # 'c()' is used to concatenate these v...
R/calc_bin_size.R#L 23   # Finally, 'length' is used to get the...
R/calc_bin_size.R#L 24   # which is stored in the 'size' variab...
R/calc_bin_size.R#L 25   size <- length(c(str_split(x[[clus_mem...
R/calc_bin_size.R#L 27   # Convert the 'size' variable to a num...
R/calc_bin_size.R#L 28   return(as.numeric(size))...
R/convert_to_path.R#L 17   # Exclude "root" from the transformati...
R/convert_to_path.R#L 18   unique_vals <- unique(vec[vec != root_...
R/convert_to_path.R#L 20   # Create a named vector for the mappin...
R/convert_to_path.R#L 21   name_map <- setNames(paste0(path_prefi...
R/convert_to_path.R#L 23   # Map and replace the non-root element...
R/convert_to_path.R#L 24   vec[vec != root_label] <- name_map[vec...
R/convert_to_path.R#L 26   return(vec)...
R/create_range.R#L 30                          bin_colname = "...
R/create_range.R#L 31   # Convert the factor column "bin" to c...
R/create_range.R#L 32   y <- as.character(x[[bin_colname]])...
R/create_range.R#L 34   # Remove square and round brackets fro...
R/create_range.R#L 35   y <- y %>% str_remove_all(pattern = "\...
R/create_range.R#L 37   # Split the character string by comma ...
R/create_range.R#L 38   y1 <- as.numeric(sapply(strsplit(y, ",...
R/create_range.R#L 40   # Split the character string by comma ...
R/create_range.R#L 41   y2 <- as.numeric(sapply(strsplit(y, ",...
R/create_range.R#L 43   if (verbose) {...
R/create_range.R#L 45       "Lower Bound:", y1, ", Upper Bound...
R/create_range.R#L 46       ", Bin Index:", x[[bin_pseudotime_...
R/create_range.R#L 48   }...
R/create_range.R#L 50   # Combine the lower bound, upper bound...
R/create_range.R#L 51   rangeVec <- c(y1, y2, x[[bin_size_coln...
R/create_range.R#L 53   # Return the numeric vector...
R/create_range.R#L 54   return(as.numeric(rangeVec))...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 35                                         ...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 36                                         ...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 37   type <- match.arg(type, c("ratio", "po...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 38   if (missing(geoMeans)) {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 41       loggeomeans <- MatrixGenerics::row...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 43       lc <- log(counts)...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 44       lc[!is.finite(lc)] <- 0...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 45       loggeomeans <- MatrixGenerics::row...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 46       allZero <- MatrixGenerics::rowSums...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 47       loggeomeans[allZero] <- -Inf...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 49   } else {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 52       stop("geoMeans should be as long a...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 55   }...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 56   if (all(is.infinite(loggeomeans))) {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 58   }...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 59   sf <- if (missing(controlGenes)) {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 61       exp(locfunc((log(cnts) - loggeomea...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 63   } else {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 65       stop("controlGenes should be eithe...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 69       exp(locfunc((log(cnts) - loggeomea...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 71   }...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 72   if (incomingGeoMeans) {...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 75   }...
R/DESeq2_estimateSizeFactorsForMatrix.R#L 76   sf...
R/edesignClass.R#L 28   "edesignClass",...
R/edesignClass.R#L 29   representation(...
R/edesignClass.R#L 34   ),...
R/edesignClass.R#L 35   prototype = list(...
R/edesignClass.R#L 40   ),...
R/edesignClass.R#L 41   validity = function(object) {...
R/edesignClass.R#L 43       stop("dis slot is not a valid data...
R/edesignClass.R#L 46       stop("groups.vector slot is not a ...
R/edesignClass.R#L 49       stop("poly_degree slot is not a va...
R/edesignClass.R#L 52       stop("edesign slot is not a valid ...
R/edesignClass.R#L 55   }...
R/entropy_discretize.R#L 72                                pseudotim...
R/entropy_discretize.R#L 73                                path_coln...
R/entropy_discretize.R#L 74                                bin_metho...
R/entropy_discretize.R#L 75                                drop.fac ...
R/entropy_discretize.R#L 76                                verbose =...
R/entropy_discretize.R#L 77                                binning =...
R/entropy_discretize.R#L 78                                bin_colna...
R/entropy_discretize.R#L 79                                bin_size_...
R/entropy_discretize.R#L 80                                bin_pseud...
R/entropy_discretize.R#L 81                                additiona...
R/entropy_discretize.R#L 82   # Initiate Variable...
R/entropy_discretize.R#L 83   scmp_bin_lower_bound <- "scmp_l_bound"...
R/entropy_discretize.R#L 84   scmp_bin_upper_bound <- "scmp_u_bound"...
R/entropy_discretize.R#L 86   # Check Object Validity...
R/entropy_discretize.R#L 87   assert_that(is(scmpObject, "scMaSigPro...
R/entropy_discretize.R#L 89   )...
R/entropy_discretize.R#L 91   # Extract cell metadata...
R/entropy_discretize.R#L 92   cell_metadata <- as.data.frame(colData...
R/entropy_discretize.R#L 94   # Checks...
R/entropy_discretize.R#L 95   assert_that(pseudotime_colname %in% co...
R/entropy_discretize.R#L 97   )...
R/entropy_discretize.R#L 98   assert_that(path_colname %in% colnames...
R/entropy_discretize.R#L100   )...
R/entropy_discretize.R#L101   assert_that(drop.fac >= 0.3,...
R/entropy_discretize.R#L103   )...
R/entropy_discretize.R#L104   assert_that(all(binning %in% c("univer...
R/entropy_discretize.R#L106   )...
R/entropy_discretize.R#L107   assert_that(...
R/entropy_discretize.R#L109       bin_method %in% c("Freedman.Diacon...
R/entropy_discretize.R#L112   )...
R/entropy_discretize.R#L113   if (!is.null(additional_params)) {...
R/entropy_discretize.R#L115       msg = "Please provide 'additional_...
R/entropy_discretize.R#L116       See details for more information"...
R/entropy_discretize.R#L120       msg = "Allowed additional paramete...
R/entropy_discretize.R#L122   }...
R/entropy_discretize.R#L124   # Add a column...
R/entropy_discretize.R#L125   cell_metadata$cell <- rownames(cell_me...
R/entropy_discretize.R#L127   # Get the avaible paths...
R/entropy_discretize.R#L128   avail.paths <- as.vector(unique(cell_m...
R/entropy_discretize.R#L130   # Check for path...
R/entropy_discretize.R#L131   assert_that(length(avail.paths) >= 2,...
R/entropy_discretize.R#L133   )...
R/entropy_discretize.R#L135   if (verbose) {...
R/entropy_discretize.R#L141   }...
R/entropy_discretize.R#L143   # Switch...
R/entropy_discretize.R#L144   result <- switch(binning,...
R/entropy_discretize.R#L146       # Extract the time information as ...
R/entropy_discretize.R#L147       time_vector <- cell_metadata[, pse...
R/entropy_discretize.R#L148       length_n <- length(time_vector)...
R/entropy_discretize.R#L150       if (additional_params$use_unique_t...
R/entropy_discretize.R#L154           message(paste("Using only uniq...
R/entropy_discretize.R#L156       }...
R/entropy_discretize.R#L158       if (verbose) {...
R/entropy_discretize.R#L161       }...
R/entropy_discretize.R#L163       # Calculate Optimal Number of Bins...
R/entropy_discretize.R#L164       tryCatch(...
R/entropy_discretize.R#L166           estBins <- estBinSize(...
R/entropy_discretize.R#L169           )...
R/entropy_discretize.R#L170           if (verbose) {...
R/entropy_discretize.R#L172           }...
R/entropy_discretize.R#L175           message(paste("Error message: ...
R/entropy_discretize.R#L176           stop("Unable to estimate bin s...
R/entropy_discretize.R#L178       )...
R/entropy_discretize.R#L180       if (verbose) {...
R/entropy_discretize.R#L182       }...
R/entropy_discretize.R#L184       # Calculate Bin intervals with ent...
R/entropy_discretize.R#L185       bin_intervals <- as.data.frame(dis...
R/entropy_discretize.R#L187       # Clean the table before merge...
R/entropy_discretize.R#L188       colnames(bin_intervals) <- c(bin_c...
R/entropy_discretize.R#L189       bin_intervals[[bin_pseudotime_coln...
R/entropy_discretize.R#L191       # Create the bin table...
R/entropy_discretize.R#L192       bin_table <- as.data.frame(t(as.da...
R/entropy_discretize.R#L195       ))))...
R/entropy_discretize.R#L196       colnames(bin_table) <- c(scmp_bin_...
R/entropy_discretize.R#L198       if (verbose) {...
R/entropy_discretize.R#L200       }...
R/entropy_discretize.R#L202       # Combine Tables...
R/entropy_discretize.R#L203       processed_cell_metadata <- as.data...
R/entropy_discretize.R#L205           by = join_by(...
R/entropy_discretize.R#L208           )...
R/entropy_discretize.R#L210       )...
R/entropy_discretize.R#L212       # Set the 'cell' column as rowname...
R/entropy_discretize.R#L213       rownames(processed_cell_metadata) ...
R/entropy_discretize.R#L216       # Apply transformations on data...
R/entropy_discretize.R#L217       discrete.list <- lapply(avail.path...
R/entropy_discretize.R#L233           time_vector <- unique(time_vec...
R/entropy_discretize.R#L234           length_n <- length(time_vector...
R/entropy_discretize.R#L235           if (v) {...
R/entropy_discretize.R#L237           }...
R/entropy_discretize.R#L242           message(paste("Time points are...
R/entropy_discretize.R#L247           expr = {...
R/entropy_discretize.R#L249               time_vector = time_vector,...
R/entropy_discretize.R#L250               drop_fac = drop.fac, bin_m...
R/entropy_discretize.R#L254               message(paste(...
R/entropy_discretize.R#L257               ))...
R/entropy_discretize.R#L259           },...
R/entropy_discretize.R#L260           error = function(e) {...
R/entropy_discretize.R#L263           }...
R/entropy_discretize.R#L271           message(paste(...
R/entropy_discretize.R#L273           ))...
R/entropy_discretize.R#L282           bin_pseudotime_colname = bin.t...
R/entropy_discretize.R#L283           bin_size_colname = bin.size, b...
R/entropy_discretize.R#L289           left_join(path.frame, bin_tabl...
R/entropy_discretize.R#L291               closest(!!time.col >= !!lb...
R/entropy_discretize.R#L292               closest(!!time.col <= !!ub...
R/entropy_discretize.R#L294           )...
R/entropy_discretize.R#L298       })...
R/entropy_discretize.R#L300       # Bind rows and convert to data fr...
R/entropy_discretize.R#L301       processed_cell_metadata <- bind_ro...
R/entropy_discretize.R#L304       # Set the 'cell' column as rowname...
R/entropy_discretize.R#L305       rownames(processed_cell_metadata) ...
R/entropy_discretize.R#L308   )...
R/entropy_discretize.R#L310   # Now, you can remove the 'cell' colum...
R/entropy_discretize.R#L311   processed_cell_metadata <- processed_c...
R/entropy_discretize.R#L313   ## Add Processed Cell Matadata back wi...
R/entropy_discretize.R#L314   scmpObject@sce@colData <- DataFrame(pr...
R/entropy_discretize.R#L316   # Update Slots...
R/entropy_discretize.R#L317   scmpObject@addParams@pseudotime_colnam...
R/entropy_discretize.R#L318   scmpObject@addParams@path_colname <- p...
R/entropy_discretize.R#L319   scmpObject@addParams@bin_method <- bin...
R/entropy_discretize.R#L320   scmpObject@addParams@binning <- binnin...
R/entropy_discretize.R#L321   scmpObject@addParams@bin_pseudotime_co...
R/entropy_discretize.R#L322   scmpObject@addParams@bin_colname <- bi...
R/entropy_discretize.R#L323   scmpObject@addParams@bin_size_colname ...
R/entropy_discretize.R#L324   return(scmpObject)...
R/estBinSize.R#L 36   estBins <- switch(bin_method,...
R/estBinSize.R#L 38       # Freedman-Diaconis rule: bin size...
R/estBinSize.R#L 39       # and inversely proportional to th...
R/estBinSize.R#L 40       2 * IQR(time_vector) / nPoints^(1 ...
R/estBinSize.R#L 43       # Square root rule: bin size is pr...
R/estBinSize.R#L 44       nPoints^(1 / 2)...
R/estBinSize.R#L 47       # Sturges' rule: bin size is propo...
R/estBinSize.R#L 48       log2(nPoints) + 1...
R/estBinSize.R#L 51       # Rice Rule: bin size is proportio...
R/estBinSize.R#L 52       2 * nPoints^(1 / 3)...
R/estBinSize.R#L 55       # Doane's formula: accounts for da...
R/estBinSize.R#L 56       sigma <- ((6 * (nPoints - 2)) / ((...
R/estBinSize.R#L 57       sk <- skewness(time_vector)...
R/estBinSize.R#L 58       1 + log2(nPoints) + log2(1 + (abs(...
R/estBinSize.R#L 61       # Scott's normal reference rule: a...
R/estBinSize.R#L 62       # Bin size is proportional to the ...
R/estBinSize.R#L 63       3.49 * abs(sd(time_vector)) / nPoi...
R/estBinSize.R#L 66   )...
R/estBinSize.R#L 69   # Scale the estimated bin size by the ...
R/estBinSize.R#L 70   estBins <- round(drop_fac * estBins, 4...
R/estBinSize.R#L 72   return(estBins)...
R/extract_fitting.R#L 50                                      "(I...
R/extract_fitting.R#L 52                                         ...
R/extract_fitting.R#L 54                                         ...
R/extract_fitting.R#L 56                                         ...
R/extract_fitting.R#L 61                                         ...
R/extract_fitting.R#L 63                                         ...
R/extract_fitting.R#L 65                                         ...
R/make.pseudobulk.counts.R#L 41                                    bin_m...
R/make.pseudobulk.counts.R#L 42                                    bin_c...
R/make.pseudobulk.counts.R#L 43                                    assay...
R/make.pseudobulk.counts.R#L 44                                    clust...
R/make.pseudobulk.counts.R#L 45   # Check Object Validity...
R/make.pseudobulk.counts.R#L 46   assert_that(is(scmpObject, "scMaSigPro...
R/make.pseudobulk.counts.R#L 48   )...
R/make.pseudobulk.counts.R#L 50   # Count slot...
R/make.pseudobulk.counts.R#L 51   assert_that(...
R/make.pseudobulk.counts.R#L 53       assay_name %in% names(scmpObject@s...
R/make.pseudobulk.counts.R#L 56   )...
R/make.pseudobulk.counts.R#L 58   # Get assay...
R/make.pseudobulk.counts.R#L 59   counts <- scmpObject@sce@assays@data@l...
R/make.pseudobulk.counts.R#L 61   # Get Pseudobulk Profile...
R/make.pseudobulk.counts.R#L 62   pseudo_bulk_profile <- as.data.frame(c...
R/make.pseudobulk.counts.R#L 64   assert_that(bin_members_colname %in% c...
R/make.pseudobulk.counts.R#L 66   )...
R/make.pseudobulk.counts.R#L 67   assert_that(bin_colname %in% colnames(...
R/make.pseudobulk.counts.R#L 69   )...
R/make.pseudobulk.counts.R#L 71   # Get the meta-information for pseudob...
R/make.pseudobulk.counts.R#L 72   meta.info <- pseudo_bulk_profile[, c(b...
R/make.pseudobulk.counts.R#L 74   # Run mclapply...
R/make.pseudobulk.counts.R#L 75   pb.counts <- lapply(1:nrow(meta.info),...
R/make.pseudobulk.counts.R#L 90       "mean" = as.matrix(round(rowMeans(...
R/make.pseudobulk.counts.R#L 91       "sum"  = as.matrix(rowSums(bin_mat...
R/make.pseudobulk.counts.R#L 92       stop("Invalid cluster_count_by val...
R/make.pseudobulk.counts.R#L 97   })...
R/make.pseudobulk.counts.R#L 99   # Convert the list output of mclapply ...
R/make.pseudobulk.counts.R#L100   pb.counts <- do.call(cbind, pb.counts)...
R/make.pseudobulk.counts.R#L101   rownames(pb.counts) <- rownames(counts...
R/make.pseudobulk.counts.R#L102   colnames(pb.counts) <- meta.info[[bin_...
R/make.pseudobulk.counts.R#L104   # Return the counts...
R/make.pseudobulk.counts.R#L105   scmpObject@compress.sce@assays@data@li...
R/make.pseudobulk.counts.R#L107   # return...
R/make.pseudobulk.counts.R#L108   return(scmpObject)...
R/make.pseudobulk.design.R#L 55                                    path_...
R/make.pseudobulk.design.R#L 56                                    bin_c...
R/make.pseudobulk.design.R#L 57                                    bin_s...
R/make.pseudobulk.design.R#L 58                                    bin_m...
R/make.pseudobulk.design.R#L 59                                    bin_p...
R/make.pseudobulk.design.R#L 60                                    verbo...
R/make.pseudobulk.design.R#L 61   # Check Object Validity...
R/make.pseudobulk.design.R#L 62   assert_that(is(scmpObject, "scMaSigPro...
R/make.pseudobulk.design.R#L 64   )...
R/make.pseudobulk.design.R#L 66   # Extract cell metadata...
R/make.pseudobulk.design.R#L 67   compressed_cell_metadata <- as.data.fr...
R/make.pseudobulk.design.R#L 68   assert_that(bin_pseudotime_colname %in...
R/make.pseudobulk.design.R#L 70   )...
R/make.pseudobulk.design.R#L 71   assert_that(path_colname %in% colnames...
R/make.pseudobulk.design.R#L 73   )...
R/make.pseudobulk.design.R#L 75   # Initate Variable...
R/make.pseudobulk.design.R#L 76   scmp_bar <- "scmp_bar"...
R/make.pseudobulk.design.R#L 78   # Get the avaible paths...
R/make.pseudobulk.design.R#L 79   avail.paths <- as.vector(unique(compre...
R/make.pseudobulk.design.R#L 81   # Add helper-col...
R/make.pseudobulk.design.R#L 82   compressed_cell_metadata[[scmp_bar]] <...
R/make.pseudobulk.design.R#L 84   # Check for path...
R/make.pseudobulk.design.R#L 85   assert_that(length(avail.paths) >= 2,...
R/make.pseudobulk.design.R#L 87   )...
R/make.pseudobulk.design.R#L 89   # Determine the number of cores...
R/make.pseudobulk.design.R#L 90   # num_cores <- detectCores() - 1 # lea...
R/make.pseudobulk.design.R#L 92   # Apply transformations on data...
R/make.pseudobulk.design.R#L 93   # pB.list <- mclapply(avail.paths, fun...
R/make.pseudobulk.design.R#L 94   pB.list <- lapply(avail.paths, functio...
R/make.pseudobulk.design.R#L 95                                         ...
R/make.pseudobulk.design.R#L 96                                         ...
R/make.pseudobulk.design.R#L 98       message("Running for", path)...
R/make.pseudobulk.design.R#L108       msg = paste("Time points are alrea...
R/make.pseudobulk.design.R#L113       group_by_at(binned.col) %>%...
R/make.pseudobulk.design.R#L114       summarise(!!bin_members_colname :=...
R/make.pseudobulk.design.R#L128       message(paste(tmp.bin.name, "has",...
R/make.pseudobulk.design.R#L136       diff(bin_range) >= 100,...
R/make.pseudobulk.design.R#L137       paste("Differences among bin sizes...
R/make.pseudobulk.design.R#L143   })...
R/make.pseudobulk.design.R#L145   # Bind rows...
R/make.pseudobulk.design.R#L146   pB.frame <- bind_rows(pB.list) %>% as....
R/make.pseudobulk.design.R#L148   # Add rownames...
R/make.pseudobulk.design.R#L149   rownames(pB.frame) <- pB.frame[[bin_co...
R/make.pseudobulk.design.R#L151   # Remove extra column...
R/make.pseudobulk.design.R#L152   # pB.frame <- pB.frame %>% select(-"sc...
R/make.pseudobulk.design.R#L154   ## Add Processed Cell Matadata back wi...
R/make.pseudobulk.design.R#L155   compressed.sce <- SingleCellExperiment...
R/make.pseudobulk.design.R#L156   compressed.sce@colData <- DataFrame(pB...
R/make.pseudobulk.design.R#L157   scmpObject@compress.sce <- compressed....
R/make.pseudobulk.design.R#L159   ## Slot Update...
R/make.pseudobulk.design.R#L160   scmpObject@addParams@path_colname <- p...
R/make.pseudobulk.design.R#L161   scmpObject@addParams@bin_colname <- bi...
R/make.pseudobulk.design.R#L162   scmpObject@addParams@bin_size_colname ...
R/make.pseudobulk.design.R#L163   scmpObject@addParams@bin_members_colna...
R/make.pseudobulk.design.R#L164   scmpObject@addParams@bin_pseudotime_co...
R/make.pseudobulk.design.R#L166   # Pathway infor...
R/make.pseudobulk.design.R#L167   return(scmpObject)...
R/sc.get.siggenes.R#L 54   # Check Validity of the object...
R/sc.get.siggenes.R#L 55   assert_that(is(scmpObj, "scMaSigProCla...
R/sc.get.siggenes.R#L 57   )...
R/sc.get.siggenes.R#L 59   # Create a named tstep...
R/sc.get.siggenes.R#L 72                  only.names = FALSE, var...
R/sc.get.siggenes.R#L 73                  significant.intercept =...
R/sc.get.siggenes.R#L 74                  groups.vector = NULL, t...
R/sc.get.siggenes.R#L 75                  r = 0.7)...
R/sc.get.siggenes.R#L 80       summary = sig.genes.s3$summary,...
R/sc.get.siggenes.R#L 81       sig.genes = sig.genes.s3$sig.genes...
R/sc.make.design.matrix.R#L 20                                   poly_d...
R/sc.make.design.matrix.R#L 21                                   bin_ps...
R/sc.make.design.matrix.R#L 22                                   path_c...
R/sc.make.design.matrix.R#L 23   # Check Object Validity...
R/sc.make.design.matrix.R#L 24   assert_that(is(scmpObject, "scMaSigPro...
R/sc.make.design.matrix.R#L 26   )...
R/sc.make.design.matrix.R#L 28   # Extract cell metadata...
R/sc.make.design.matrix.R#L 29   comp.cell.metadata <- as.data.frame(co...
R/sc.make.design.matrix.R#L 31   # pseudotime_colname...
R/sc.make.design.matrix.R#L 32   assert_that((bin_pseudotime_colname %i...
R/sc.make.design.matrix.R#L 34   )...
R/sc.make.design.matrix.R#L 35   # path_colname...
R/sc.make.design.matrix.R#L 36   assert_that((path_colname %in% colname...
R/sc.make.design.matrix.R#L 38   )...
R/sc.make.design.matrix.R#L 40   # Subset cell metadata...
R/sc.make.design.matrix.R#L 41   com.cell.meta <- comp.cell.metadata[, ...
R/sc.make.design.matrix.R#L 43   # Get available paths...
R/sc.make.design.matrix.R#L 44   avail.paths <- as.vector(unique(com.ce...
R/sc.make.design.matrix.R#L 46   # Add Dummy Variables...
R/sc.make.design.matrix.R#L 47   for (i in avail.paths) {...
R/sc.make.design.matrix.R#L 49   }...
R/sc.make.design.matrix.R#L 51   # Drop path columns...
R/sc.make.design.matrix.R#L 52   com.cell.meta <- com.cell.meta[, colna...
R/sc.make.design.matrix.R#L 54   # Get colvec...
R/sc.make.design.matrix.R#L 55   col.vec <- colnames(com.cell.meta)[col...
R/sc.make.design.matrix.R#L 57   # Add Replicate Column...
R/sc.make.design.matrix.R#L 58   com.cell.meta <- com.cell.meta %>%...
R/sc.make.design.matrix.R#L 62   # Order...
R/sc.make.design.matrix.R#L 63   ord <- c(c(1, ncol(com.cell.meta)), c(...
R/sc.make.design.matrix.R#L 65   # Reorder columns...
R/sc.make.design.matrix.R#L 66   com.cell.meta <- com.cell.meta[, ord]...
R/sc.make.design.matrix.R#L 68   # Run Original MaSigPro make.matrix.de...
R/sc.make.design.matrix.R#L 69   edesignList <- make.design.matrix(com....
R/sc.make.design.matrix.R#L 74   )...
R/sc.make.design.matrix.R#L 76   # Create Object...
R/sc.make.design.matrix.R#L 77   edesignObj <- new("edesignClass",...
R/sc.make.design.matrix.R#L 82   )...
R/sc.make.design.matrix.R#L 84   # Update Slot...
R/sc.make.design.matrix.R#L 85   scmpObject@edesign <- edesignObj...
R/sc.make.design.matrix.R#L 87   return(scmpObject)...
R/sc.p.vector.class.R#L 39   slots = c(...
R/sc.p.vector.class.R#L 47   ),...
R/sc.p.vector.class.R#L 48   validity = function(object) {...
R/sc.p.vector.class.R#L 51       stop("Slot 'SELEC' must be a dgCMa...
R/sc.p.vector.class.R#L 56       stop("Slot 'sc.p.vector' must be a...
R/sc.p.vector.class.R#L 61       stop("Slot 'p.adjusted' must be nu...
R/sc.p.vector.class.R#L 66       stop("Slot 'FDR' must be numeric."...
R/sc.p.vector.class.R#L 71       stop("Slot 'dis' must be a data fr...
R/sc.p.vector.class.R#L 76       stop("Slot 'groups.vector' must be...
R/sc.p.vector.class.R#L 85   },...
R/sc.p.vector.class.R#L 86   prototype = list(...
R/sc.p.vector.class.R#L 93   )...
R/sc.p.vector.R#L 59   # Check the type of the 'design' param...
R/sc.p.vector.R#L 60   assert_that(is(scmpObj, "scMaSigProCla...
R/sc.p.vector.R#L 62   )...
R/sc.p.vector.R#L 64   # Extract from s4...
R/sc.p.vector.R#L 65   dis <- as.data.frame(scmpObj@edesign@d...
R/sc.p.vector.R#L 66   groups.vector <- scmpObj@edesign@group...
R/sc.p.vector.R#L 67   edesign <- scmpObj@edesign@edesign...
R/sc.p.vector.R#L 69   # Convert 'scmpObj' to matrix and sele...
R/sc.p.vector.R#L 70   dat <- scmpObj@compress.sce@assays@dat...
R/sc.p.vector.R#L 71   dat <- dat[, as.character(rownames(dis...
R/sc.p.vector.R#L 72   G <- nrow(dat)...
R/sc.p.vector.R#L 74   # Removing rows with many missings:...
R/sc.p.vector.R#L 75   count.na <- function(x) (length(x) - l...
R/sc.p.vector.R#L 76   dat <- dat[apply(dat, 1, count.na) >= ...
R/sc.p.vector.R#L 78   # Add check...
R/sc.p.vector.R#L 79   assert_that((dat@Dim[1] > 1), msg = pa...
R/sc.p.vector.R#L 81   # if(verbose){...
R/sc.p.vector.R#L 82   #     message(paste("'min.obs' is set ...
R/sc.p.vector.R#L 83   #     message(paste("After filtering w...
R/sc.p.vector.R#L 84   # }...
R/sc.p.vector.R#L 86   # Removing rows with all zeros:...
R/sc.p.vector.R#L 87   sumatot <- apply(dat, 1, sum)...
R/sc.p.vector.R#L 88   counts0 <- which(sumatot == 0)...
R/sc.p.vector.R#L 89   if (length(counts0) > 0) {...
R/sc.p.vector.R#L 91   }...
R/sc.p.vector.R#L 93   # Get dimensions for the input...
R/sc.p.vector.R#L 94   g <- dim(dat)[1]...
R/sc.p.vector.R#L 95   n <- dim(dat)[2]...
R/sc.p.vector.R#L 96   p <- dim(dis)[2]...
R/sc.p.vector.R#L 97   sc.p.vector <- vector(mode = "numeric"...
R/sc.p.vector.R#L 99   if (parallel == F) {...
R/sc.p.vector.R#L101       pb <- txtProgressBar(min = 0, max ...
R/sc.p.vector.R#L103   }...
R/sc.p.vector.R#L105   # Calculate  offset...
R/sc.p.vector.R#L106   if (offset) {...
R/sc.p.vector.R#L110       message("Using DESeq2::estimateSiz...
R/sc.p.vector.R#L111       message("Please cite DESeq2 as 'Lo...
R/sc.p.vector.R#L113   } else {...
R/sc.p.vector.R#L115   }...
R/sc.p.vector.R#L117   if (parallel) {...
R/sc.p.vector.R#L120       message(paste("Running with", numC...
R/sc.p.vector.R#L122   } else {...
R/sc.p.vector.R#L124   }...
R/sc.p.vector.R#L126   p.vector.list <- mclapply(1:g, functio...
R/sc.p.vector.R#L133       if (is.element(i, div) && verbose_...
R/sc.p.vector.R#L135           setTxtProgressBar(pb_lapply, i...
R/sc.p.vector.R#L137       }...
R/sc.p.vector.R#L140       data = dis_lapply, family = family...
R/sc.p.vector.R#L141       offset = offsetdata_lapply...
R/sc.p.vector.R#L146       sc_p_val <- 1...
R/sc.p.vector.R#L148       model.glm.0 <- glm(y ~ 1,...
R/sc.p.vector.R#L151       )...
R/sc.p.vector.R#L153       # Perform ANOVA or Chi-square test...
R/sc.p.vector.R#L154       if (family_lapply$family == "gauss...
R/sc.p.vector.R#L157       } else {...
R/sc.p.vector.R#L160       }...
R/sc.p.vector.R#L164   }, mc.cores = numCores)...
R/sc.p.vector.R#L166   names(p.vector.list) <- rownames(dat)...
R/sc.p.vector.R#L167   sc.p.vector <- unlist(p.vector.list, r...
R/sc.p.vector.R#L168   #-------------------------------------...
R/sc.p.vector.R#L169   # Correct p-values using FDR correctio...
R/sc.p.vector.R#L170   p.adjusted <- unlist(p.adjust(sc.p.vec...
R/sc.p.vector.R#L172   )...
R/sc.p.vector.R#L173   names(p.adjusted) <- names(sc.p.vector...
R/sc.p.vector.R#L174   genes.selected <- rownames(dat)[which(...
R/sc.p.vector.R#L175   FDR <- sort(sc.p.vector)[length(genes....
R/sc.p.vector.R#L177   # Subset the expression values of sign...
R/sc.p.vector.R#L178   SELEC <- dat[rownames(dat) %in% genes....
R/sc.p.vector.R#L180   if (nrow(SELEC) == 0) {...
R/sc.p.vector.R#L183   } else {...
R/sc.p.vector.R#L189       SELEC = SELEC,...
R/sc.p.vector.R#L190       sc.p.vector = sc.p.vector,...
R/sc.p.vector.R#L191       p.adjusted = p.adjusted,...
R/sc.p.vector.R#L192       FDR = FDR,...
R/sc.p.vector.R#L193       dis = dis,...
R/sc.p.vector.R#L194       groups.vector = groups.vector,...
R/sc.p.vector.R#L195       family = family...
R/sc.p.vector.R#L210   }...
R/sc.path.intersection.R#L 18   # Extract the list of significant gene...
R/sc.path.intersection.R#L 19   gene.list <- lapply(colnames(scmpObj@s...
R/sc.path.intersection.R#L 21   })...
R/sc.path.intersection.R#L 22   names(gene.list) <- colnames(scmpObj@s...
R/sc.path.intersection.R#L 24   # Perform UpSet plot...
R/sc.path.intersection.R#L 25   upset(...
R/sc.path.intersection.R#L 35   )...
R/sc.PlotGroups.R#L 17   function(scmpObj, ...
R/sc.PlotGroups.R#L 18            feature_id, ...
R/sc.PlotGroups.R#L 19            xlab = "Pooled Pseudotime",...
R/sc.PlotGroups.R#L 20            ylab = "Pseudobulk Expression...
R/sc.PlotGroups.R#L 21            smoothness = 0.01...
R/sc.PlotGroups.R#L 22            ) {...
R/sc.PlotGroups.R#L 23       ...
R/sc.PlotGroups.R#L 24       # Extract the bulk counts...
R/sc.PlotGroups.R#L 25       bulk.counts = scmpObj@compress.sce...
R/sc.PlotGroups.R#L 26       ...
R/sc.PlotGroups.R#L 27       # Check...
R/sc.PlotGroups.R#L 28       assert_that(all(feature_id %in% ro...
R/sc.PlotGroups.R#L 29                   msg = "Feature Id does...
R/sc.PlotGroups.R#L 30       )...
R/sc.PlotGroups.R#L 31       # gene_i...
R/sc.PlotGroups.R#L 32       yy <- bulk.counts[rownames(bulk.co...
R/sc.PlotGroups.R#L 33       ...
R/sc.PlotGroups.R#L 34       # Extract the bulk counts...
R/sc.PlotGroups.R#L 35       edesign = scmpObj@edesign@edesign...
R/sc.PlotGroups.R#L 36       ...
R/sc.PlotGroups.R#L 37       # group Vector...
R/sc.PlotGroups.R#L 38       groups.vector = scmpObj@scPVector@...
R/sc.PlotGroups.R#L 39       ...
R/sc.PlotGroups.R#L 40       # Prepare for Tfit...
R/sc.PlotGroups.R#L 41       rm <- matrix(yy, nrow = 1, ncol = ...
R/sc.PlotGroups.R#L 42       rownames(rm) <- c("ratio medio")...
R/sc.PlotGroups.R#L 43       colnames(rm) <- rownames(scmpObj@e...
R/sc.PlotGroups.R#L 44       ...
R/sc.PlotGroups.R#L 45       # Extract the beta...
R/sc.PlotGroups.R#L 46       betas.table <- showCoeff(scmpObj, ...
R/sc.PlotGroups.R#L 47       betas <- betas.table[rownames(beta...
R/sc.PlotGroups.R#L 48       ...
R/sc.PlotGroups.R#L 49       # Set Data...
R/sc.PlotGroups.R#L 50       curve.df <- data.frame(x = 0, y = ...
R/sc.PlotGroups.R#L 51       line.df <- data.frame(x = 0, y = 0...
R/sc.PlotGroups.R#L 52       colnames(line.df) <- c("x", "y", s...
R/sc.PlotGroups.R#L 53       colnames(line.df) <- c("x", "y", s...
R/sc.PlotGroups.R#L 54       curve_data <- NULL...
R/sc.PlotGroups.R#L 55       path.names <- unique(scmpObj@compr...
R/sc.PlotGroups.R#L 56       ...
R/sc.PlotGroups.R#L 57       # Get x and y...
R/sc.PlotGroups.R#L 58       x <- y <- rep(0, nrow(scmpObj@edes...
R/sc.PlotGroups.R#L 59       ...
R/sc.PlotGroups.R#L 60       # Create Point df...
R/sc.PlotGroups.R#L 61       points.df <- data.frame(...
R/sc.PlotGroups.R#L 62           pooled.time = scmpObj@edesign@...
R/sc.PlotGroups.R#L 63           pb.counts = as.vector(yy),...
R/sc.PlotGroups.R#L 64           path = scmpObj@compress.sce@co...
R/sc.PlotGroups.R#L 65       )...
R/sc.PlotGroups.R#L 66       ...
R/sc.PlotGroups.R#L 67       for (i in path.names){...
R/sc.PlotGroups.R#L 68           ...
R/sc.PlotGroups.R#L 69           # Extract Coeff...
R/sc.PlotGroups.R#L 70           a <- reg.coeffs(...
R/sc.PlotGroups.R#L 71               coefficients = betas, ...
R/sc.PlotGroups.R#L 72               groups.vector = groups.vec...
R/sc.PlotGroups.R#L 73               group = i...
R/sc.PlotGroups.R#L 74           )...
R/sc.PlotGroups.R#L 75           a <- c(a, rep(0, (7 - length(a...
R/sc.PlotGroups.R#L 76           ...
R/sc.PlotGroups.R#L 77           print(a)...
R/sc.PlotGroups.R#L 78           ...
R/sc.PlotGroups.R#L 79           # Extract the time...
R/sc.PlotGroups.R#L 80           time <- scmpObj@edesign@edesig...
R/sc.PlotGroups.R#L 81           ...
R/sc.PlotGroups.R#L 82           # Create a data frame with tim...
R/sc.PlotGroups.R#L 83           x <- seq(from = min(time), to ...
R/sc.PlotGroups.R#L 84           ...
R/sc.PlotGroups.R#L 85           # Compute the curve values...
R/sc.PlotGroups.R#L 86           y <- a[1] + a[2]*x + a[3]*(x^2...
R/sc.PlotGroups.R#L 87               a[5]*(x^4) + a[6]*(x^5) + ...
R/sc.PlotGroups.R#L 88           ...
R/sc.PlotGroups.R#L 89           # Create tmpvector...
R/sc.PlotGroups.R#L 90           curve_df_tmp <- data.frame(...
R/sc.PlotGroups.R#L 91               x = x, y = y,...
R/sc.PlotGroups.R#L 92               path = i...
R/sc.PlotGroups.R#L 93           )...
R/sc.PlotGroups.R#L 94           curve.df <- rbind(curve.df, cu...
R/sc.PlotGroups.R#L 95       }...
R/sc.PlotGroups.R#L 96       ...
R/sc.PlotGroups.R#L 97       curve.df <- curve.df[-1, ]...
R/sc.PlotGroups.R#L 98       ...
R/sc.PlotGroups.R#L 99       # Calc limits...
R/sc.PlotGroups.R#L100       xlim <- c(min(points.df[["pooled.t...
R/sc.PlotGroups.R#L101       ylim <- c(min(as.numeric(points.df...
R/sc.PlotGroups.R#L102       ...
R/sc.PlotGroups.R#L103       xlim[2] <- max(points.df[["pooled....
R/sc.PlotGroups.R#L104       ...
R/sc.PlotGroups.R#L105       conesa_colors <- getConesaColors()...
R/sc.PlotGroups.R#L106       names(conesa_colors) <- unique(poi...
R/sc.PlotGroups.R#L107       ...
R/sc.PlotGroups.R#L108       p <- ggplot() +...
R/sc.PlotGroups.R#L109           geom_point(data = points.df, a...
R/sc.PlotGroups.R#L110           geom_line(data = points.df, ae...
R/sc.PlotGroups.R#L111           geom_line(data = curve.df, aes...
R/sc.PlotGroups.R#L112           ggtitle(paste("Feature Id:", f...
R/sc.PlotGroups.R#L113                #   subtitle = paste("R2:...
R/sc.PlotGroups.R#L114           ) +...
R/sc.PlotGroups.R#L115            xlab(xlab) +...
R/sc.PlotGroups.R#L116            ylab(ylab) +...
R/sc.PlotGroups.R#L117           theme_classic(base_size = 12) ...
R/sc.PlotGroups.R#L118           theme(...
R/sc.PlotGroups.R#L119               legend.position = "bottom"...
R/sc.PlotGroups.R#L120               panel.grid.major = element...
R/sc.PlotGroups.R#L121               panel.grid.minor = element...
R/sc.PlotGroups.R#L122           ) +...
R/sc.PlotGroups.R#L123           scale_x_continuous(breaks = se...
R/sc.PlotGroups.R#L124           labs(color = "Paths") +...
R/sc.PlotGroups.R#L125           coord_cartesian(xlim = xlim, y...
R/sc.PlotGroups.R#L126           scale_color_manual(values = co...
R/sc.PlotGroups.R#L127           # ...
R/sc.PlotGroups.R#L128       print(p)...
R/sc.PlotGroups.R#L129   }...
R/sc.stepback.R#L  2   lm1 <- glm(y ~ ., data = d, family = f...
R/sc.stepback.R#L  3   result <- summary(lm1)...
R/sc.stepback.R#L  4   max <- max(result$coefficients[, 4][-1...
R/sc.stepback.R#L  5   if (length(result$coefficients[, 4][-1...
R/sc.stepback.R#L  7       max <- 0...
R/sc.stepback.R#L  8       lm1 <- glm(y ~ 1, family = family,...
R/sc.stepback.R#L 10   }...
R/sc.stepback.R#L 11   while (max > alfa) {...
R/sc.stepback.R#L 13       ,...
R/sc.stepback.R#L 14       4...
R/sc.stepback.R#L 19       min <- min(result$coefficients[, 4...
R/sc.stepback.R#L 20       lastname <- names(result$coefficie...
R/sc.stepback.R#L 23       d <- as.data.frame(d)...
R/sc.stepback.R#L 24       colnames(d) <- lastname...
R/sc.stepback.R#L 30       max <- result$coefficients[, 4][-1...
R/sc.stepback.R#L 31       if (max > alfa) {...
R/sc.stepback.R#L 34       }...
R/sc.stepback.R#L 36   }...
R/sc.stepback.R#L 37   return(lm1)...
R/sc.stepfor.R#L  2   pval <- NULL...
R/sc.stepfor.R#L  3   design <- NULL...
R/sc.stepfor.R#L  4   j <- 1...
R/sc.stepfor.R#L  5   resul0 <- summary(glm(y ~ ., data = d,...
R/sc.stepfor.R#L  6   d <- as.data.frame(d[, names(resul0)[-...
R/sc.stepfor.R#L  7   for (i in 1:ncol(d)) {...
R/sc.stepfor.R#L 13   }...
R/sc.stepfor.R#L 14   min <- min(pval)...
R/sc.stepfor.R#L 15   while (min < alfa) {...
R/sc.stepfor.R#L 26       lastname <- colnames(d)[!b]...
R/sc.stepfor.R#L 30       colnames(d) <- lastname...
R/sc.stepfor.R#L 35       for (i in 1:ncol(d)) {...
R/sc.stepfor.R#L 41       }...
R/sc.stepfor.R#L 42       min <- min(pval, na.rm = TRUE)...
R/sc.stepfor.R#L 44       min <- 1...
R/sc.stepfor.R#L 46   }...
R/sc.stepfor.R#L 47   if (is.null(design)) {...
R/sc.stepfor.R#L 49   } else {...
R/sc.stepfor.R#L 51   }...
R/sc.stepfor.R#L 52   return(lm1)...
R/sc.T.fit.R#L 58                      step.method = "back...
R/sc.T.fit.R#L 59                      Q = scmpObj@addPara...
R/sc.T.fit.R#L 60                      nvar.correction = F...
R/sc.T.fit.R#L 61                      family = scmpObj@di...
R/sc.T.fit.R#L 62                      epsilon = scmpObj@a...
R/sc.T.fit.R#L 63                      offset = T,...
R/sc.T.fit.R#L 64                      verbose = TRUE,...
R/sc.T.fit.R#L 65                      parallel = T...
R/sc.T.fit.R#L 66                      ) {...
R/sc.T.fit.R#L 67   assert_that(is(scmpObj, "scMaSigProCla...
R/sc.T.fit.R#L 69   )...
R/sc.T.fit.R#L 71   # Transfer Data...
R/sc.T.fit.R#L 72   dis <- scmpObj@edesign@dis...
R/sc.T.fit.R#L 73   Q <- scmpObj@addParams@Q...
R/sc.T.fit.R#L 74   groups.vector <- scmpObj@edesign@group...
R/sc.T.fit.R#L 75   groups.vector <- c(groups.vector[nchar...
R/sc.T.fit.R#L 76   edesign <- scmpObj@edesign@edesign...
R/sc.T.fit.R#L 77   G <- scmpObj@addParams@g...
R/sc.T.fit.R#L 78   family <- scmpObj@scPVector@family...
R/sc.T.fit.R#L 79   ...
R/sc.T.fit.R#L 80   dat <- scmpObj@scPVector@SELEC...
R/sc.T.fit.R#L 81   dat <- rbind(c(rep(1, ncol(dat))), dat...
R/sc.T.fit.R#L 82   dat <- dat[, as.character(rownames(dis...
R/sc.T.fit.R#L 83   ...
R/sc.T.fit.R#L 84   g <- (dim(dat)[1] - 1)...
R/sc.T.fit.R#L 85   n <- dim(dat)[2]...
R/sc.T.fit.R#L 86   p <- dim(dis)[2]...
R/sc.T.fit.R#L 87   vars.in <- colnames(dis)...
R/sc.T.fit.R#L 88   sol <- coefficients <- group.coeffs <-...
R/sc.T.fit.R#L 89   influ.info <- matrix(NA, nrow = nrow(d...
R/sc.T.fit.R#L 90   rownames(influ.info) <- rownames(dis)...
R/sc.T.fit.R#L 92   if (nvar.correction) {...
R/sc.T.fit.R#L 94   }...
R/sc.T.fit.R#L 96   # Calculate  offset...
R/sc.T.fit.R#L 97   if (offset) {...
R/sc.T.fit.R#L 99   } else {...
R/sc.T.fit.R#L101   }...
R/sc.T.fit.R#L105       numCores <- detectCores()...
R/sc.T.fit.R#L106       if (verbose) {...
R/sc.T.fit.R#L108       }...
R/sc.T.fit.R#L110       numCores <- 1...
R/sc.T.fit.R#L111       if (verbose) {...
R/sc.T.fit.R#L112           i <-1...
R/sc.T.fit.R#L113           div <- c(1:round(g / 100)) * 1...
R/sc.T.fit.R#L114           pb <- txtProgressBar(min = 0, ...
R/sc.T.fit.R#L115       }...
R/sc.T.fit.R#L117   numCores <- detectCores()...
R/sc.T.fit.R#L119   # Collect all the y...
R/sc.T.fit.R#L120   y_input <- parallel::mclapply(2:(g + 1...
R/sc.T.fit.R#L122   }, mc.cores = numCores)...
R/sc.T.fit.R#L123   names(y_input) <- rownames(dat)[-1]...
R/sc.T.fit.R#L124   ...
R/sc.T.fit.R#L125   # Select the covariates...
R/sc.T.fit.R#L126   if (step.method == "backward") {...
R/sc.T.fit.R#L128        result_list <- lapply(names(y_inp...
R/sc.T.fit.R#L130       reg_scmpObj <- sc.stepback(y = y, ...
R/sc.T.fit.R#L131       lmf_scmpObj <- glm(y ~ ., data = a...
R/sc.T.fit.R#L132       model.glm.0_scmpObj <- glm(y ~ 1, ...
R/sc.T.fit.R#L133       if (parallel == F) {...
R/sc.T.fit.R#L134           if (verbose_lapply) {...
R/sc.T.fit.R#L135               if (verbose_lapply) {...
R/sc.T.fit.R#L136                   i=i+1...
R/sc.T.fit.R#L137                   setTxtProgressBar(pb_l...
R/sc.T.fit.R#L138               }...
R/sc.T.fit.R#L139           }...
R/sc.T.fit.R#L140       }...
R/sc.T.fit.R#L141       return(extract_fitting(reg = reg_s...
R/sc.T.fit.R#L142       # return(list(...
R/sc.T.fit.R#L143       #     reg = reg,...
R/sc.T.fit.R#L144       #     lmf = lmf,...
R/sc.T.fit.R#L145       #     model.glm.0 = model.glm.0...
R/sc.T.fit.R#L146       # ))...
R/sc.T.fit.R#L148      })...
R/sc.T.fit.R#L149   } else if (step.method == "forward") {...
R/sc.T.fit.R#L150       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L151           y <- y_input[[gene_name]]...
R/sc.T.fit.R#L152           reg_scmpObj <- sc.stepfor(y = ...
R/sc.T.fit.R#L153           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L154           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L155           div <- c(1:round(g / 100)) * 1...
R/sc.T.fit.R#L156           if (parallel == F) {...
R/sc.T.fit.R#L157               if (is.element(y, div) && ...
R/sc.T.fit.R#L158                   if (verbose) {...
R/sc.T.fit.R#L159                       setTxtProgressBar(...
R/sc.T.fit.R#L160                   }...
R/sc.T.fit.R#L161               }...
R/sc.T.fit.R#L162           }...
R/sc.T.fit.R#L163           return(extract_fitting(reg = r...
R/sc.T.fit.R#L164       }, mc.cores = numCores, mc.set.see...
R/sc.T.fit.R#L165   } else if (step.method == "two.ways.ba...
R/sc.T.fit.R#L166       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L167           y <- y_input[[gene_name]]...
R/sc.T.fit.R#L168           reg_scmpObj <- sc.two.ways.ste...
R/sc.T.fit.R#L169           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L170           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L171           div <- c(1:round(g / 100)) * 1...
R/sc.T.fit.R#L172           if (parallel == F) {...
R/sc.T.fit.R#L173               if (is.element(y, div) && ...
R/sc.T.fit.R#L174                   if (verbose) {...
R/sc.T.fit.R#L175                       setTxtProgressBar(...
R/sc.T.fit.R#L176                   }...
R/sc.T.fit.R#L177               }...
R/sc.T.fit.R#L178           }...
R/sc.T.fit.R#L179           return(extract_fitting(reg = r...
R/sc.T.fit.R#L180       }, mc.cores = numCores, mc.set.see...
R/sc.T.fit.R#L181       #})...
R/sc.T.fit.R#L182   } else if (step.method == "two.ways.fo...
R/sc.T.fit.R#L183       result_list <- parallel::mclapply(...
R/sc.T.fit.R#L184           y <- y_input[[gene_name]]...
R/sc.T.fit.R#L185           reg_scmpObj <- sc.two.ways.ste...
R/sc.T.fit.R#L186           lmf_scmpObj <- glm(y ~ ., data...
R/sc.T.fit.R#L187           model.glm.0_scmpObj <- glm(y ~...
R/sc.T.fit.R#L188           div <- c(1:round(g / 100)) * 1...
R/sc.T.fit.R#L189           if (parallel == F) {...
R/sc.T.fit.R#L190               if (is.element(y, div) && ...
R/sc.T.fit.R#L191                   if (verbose) {...
R/sc.T.fit.R#L192                       setTxtProgressBar(...
R/sc.T.fit.R#L193                   }...
R/sc.T.fit.R#L194               }...
R/sc.T.fit.R#L195           }...
R/sc.T.fit.R#L196           return(extract_fitting(reg = r...
R/sc.T.fit.R#L197       }, mc.cores = numCores, mc.set.see...
R/sc.T.fit.R#L198   } else {...
R/sc.T.fit.R#L200   }...
R/sc.T.fit.R#L201   ...
R/sc.T.fit.R#L202   #-------------------------------------...
R/sc.T.fit.R#L203   feature_names <- unlist(lapply(result_...
R/sc.T.fit.R#L205   }))...
R/sc.T.fit.R#L206   # Get the soluction frame...
R/sc.T.fit.R#L207   sol.list <- lapply(result_list, functi...
R/sc.T.fit.R#L209   })...
R/sc.T.fit.R#L210   # Get Coeffcient...
R/sc.T.fit.R#L211   coeff.list <- lapply(result_list, func...
R/sc.T.fit.R#L213   })...
R/sc.T.fit.R#L214   # Get t scores...
R/sc.T.fit.R#L215   t.list <- lapply(result_list, function...
R/sc.T.fit.R#L217   })...
R/sc.T.fit.R#L218   # Get influ.info...
R/sc.T.fit.R#L219   influ.info.list <- lapply(result_list,...
R/sc.T.fit.R#L221   })...
R/sc.T.fit.R#L222   # Assuming 'parallel' is your list...
R/sc.T.fit.R#L223   influ.info.list <- influ.info.list[!sa...
R/sc.T.fit.R#L224   # Lapply to remove column 1...
R/sc.T.fit.R#L225   influ.info.list <- lapply(influ.info.l...
R/sc.T.fit.R#L227   })...
R/sc.T.fit.R#L228   # Create scmpObjframe...
R/sc.T.fit.R#L229   sol <- do.call("rbind", sol.list)...
R/sc.T.fit.R#L230   coefficients <- do.call("rbind", coeff...
R/sc.T.fit.R#L231   t.score <- do.call("rbind", t.list)...
R/sc.T.fit.R#L232   influ.info <- do.call("cbind", influ.i...
R/sc.T.fit.R#L234   # Add rownames...
R/sc.T.fit.R#L235   rownames(coefficients) <- feature_name...
R/sc.T.fit.R#L236   rownames(t.score) <- feature_names...
R/sc.T.fit.R#L238   #-------------------------...
R/sc.T.fit.R#L239   # Ends here...
R/sc.T.fit.R#L241   if (!is.null(sol)) {...
R/sc.T.fit.R#L247       "p-value", "R-squared", "p.valor_b...
R/sc.T.fit.R#L248       paste("p.valor_", vars.in, sep = "...
R/sc.T.fit.R#L251       sep = ""...
R/sc.T.fit.R#L254       vars.in,...
R/sc.T.fit.R#L255       sep = ""...
R/sc.T.fit.R#L258       groups <- colnames(edesign)[3:ncol...
R/sc.T.fit.R#L259       degree <- (length(groups.vector) /...
R/sc.T.fit.R#L261       for (w in 1:nrow(coefficients)) {...
R/sc.T.fit.R#L265           B <- reg.coeffs(coefficients =...
R/sc.T.fit.R#L266           cols <- paste(rep(groups[l], e...
R/sc.T.fit.R#L269           )...
R/sc.T.fit.R#L270           A <- c(A, B)...
R/sc.T.fit.R#L271           col.names <- c(col.names, cols...
R/sc.T.fit.R#L274       }...
R/sc.T.fit.R#L275       colnames(group.coeffs) <- col.name...
R/sc.T.fit.R#L276       rownames(group.coeffs) <- rownames...
R/sc.T.fit.R#L278   }...
R/sc.T.fit.R#L279   if (ncol(influ.info) > 2) {...
R/sc.T.fit.R#L281   }...
R/sc.T.fit.R#L282   # influ.info <- influ.info[, -1]...
R/sc.T.fit.R#L284   # Create a constructor for the class...
R/sc.T.fit.R#L285   t.fit.object <- new("scTFitClass",...
R/sc.T.fit.R#L293   )...
R/sc.T.fit.R#L295   # Added Tfit...
R/sc.T.fit.R#L296   scmpObj@scTFit <- t.fit.object...
R/sc.T.fit.R#L297   ...
R/sc.T.fit.R#L298   # Update Parameter Slot...
R/sc.T.fit.R#L299   scmpObj@addParams@Q <- Q...
R/sc.T.fit.R#L300   scmpObj@addParams@epsilon <- epsilon...
R/sc.T.fit.R#L301   scmpObj@addParams@g <- integer(g)...
R/sc.T.fit.R#L302   scmpObj@addParams@step.method <- step....
R/sc.T.fit.R#L303   scmpObj@distribution <- family...
R/sc.T.fit.R#L304   ...
R/sc.T.fit.R#L305   return(scmpObj)...
R/sc.two.ways.stepback.R#L  2   function(y = y, d = d, alfa = 0.05, fa...
R/sc.two.ways.stepback.R#L  9       varout <- names(result)[result == ...
R/sc.two.ways.stepback.R#L 10       pos <- position(matrix = d, vari =...
R/sc.two.ways.stepback.R#L 11       OUT <- as.data.frame(cbind(OUT, d[...
R/sc.two.ways.stepback.R#L 12       x <- ncol(OUT)...
R/sc.two.ways.stepback.R#L 13       colnames(OUT)[x] <- colnames(d)[po...
R/sc.two.ways.stepback.R#L 14       if (ncol(d) == 2) {...
R/sc.two.ways.stepback.R#L 17       }...
R/sc.two.ways.stepback.R#L 18       d <- d[, -pos]...
R/sc.two.ways.stepback.R#L 19       if (is.null(dim(d))) {...
R/sc.two.ways.stepback.R#L 22       }...
R/sc.two.ways.stepback.R#L 23       j <- ncol(d) + 1...
R/sc.two.ways.stepback.R#L 24       pval <- NULL...
R/sc.two.ways.stepback.R#L 25       for (i in 1:ncol(OUT)) {...
R/sc.two.ways.stepback.R#L 31       }...
R/sc.two.ways.stepback.R#L 32       min <- min(pval, na.rm = TRUE)...
R/sc.two.ways.stepback.R#L 33       while (min <= alfa) {...
R/sc.two.ways.stepback.R#L 41           max <- max(pval, na.rm = TRUE)...
R/sc.two.ways.stepback.R#L 42           b <- pval == max...
R/sc.two.ways.stepback.R#L 43           c <- c(1:length(pval))...
R/sc.two.ways.stepback.R#L 44           last <- c[b]...
R/sc.two.ways.stepback.R#L 45           lastname <- colnames(OUT)[last...
R/sc.two.ways.stepback.R#L 49           OUT <- as.data.frame(OUT)...
R/sc.two.ways.stepback.R#L 50           colnames(OUT) <- lastname...
R/sc.two.ways.stepback.R#L 55           sub <- cbind(d, OUT[, i])...
R/sc.two.ways.stepback.R#L 56           sub <- as.data.frame(sub)...
R/sc.two.ways.stepback.R#L 57           lm2 <- glm(y ~ ., data = sub, ...
R/sc.two.ways.stepback.R#L 58           result <- summary(lm2)...
R/sc.two.ways.stepback.R#L 59           pval[i] <- result$coefficients...
R/sc.two.ways.stepback.R#L 63           if (min <= alfa) {...
R/sc.two.ways.stepback.R#L 67           }...
R/sc.two.ways.stepback.R#L 68           min <- 1...
R/sc.two.ways.stepback.R#L 70       }...
R/sc.two.ways.stepback.R#L 71       lm1 <- glm(y ~ ., data = d, family...
R/sc.two.ways.stepback.R#L 72       result <- summary(lm1)$coefficient...
R/sc.two.ways.stepback.R#L 73       max <- max(result[-1], na.rm = TRU...
R/sc.two.ways.stepback.R#L 74       if (length(result[-1]) == 1) {...
R/sc.two.ways.stepback.R#L 77           max <- 0...
R/sc.two.ways.stepback.R#L 78           lm1 <- glm(y ~ 1, family = fam...
R/sc.two.ways.stepback.R#L 80       }...
R/sc.two.ways.stepback.R#L 83   }...
R/sc.two.ways.stepfor.R#L  2   function(y = y, d = d, alfa = 0.05, fa...
R/sc.two.ways.stepfor.R#L  9       sub <- cbind(design, d[, i])...
R/sc.two.ways.stepfor.R#L 10       sub <- as.data.frame(sub)...
R/sc.two.ways.stepfor.R#L 11       lm2 <- glm(y ~ ., data = sub, fami...
R/sc.two.ways.stepfor.R#L 12       result <- summary(lm2)...
R/sc.two.ways.stepfor.R#L 13       pval[i] <- result$coefficients[, 4...
R/sc.two.ways.stepfor.R#L 17       b <- pval == min...
R/sc.two.ways.stepfor.R#L 18       c <- c(1:length(pval))...
R/sc.two.ways.stepfor.R#L 19       pos <- c[b]...
R/sc.two.ways.stepfor.R#L 20       pos <- pos[!is.na(pos)][1]...
R/sc.two.ways.stepfor.R#L 21       design <- cbind(design, d[, pos])...
R/sc.two.ways.stepfor.R#L 22       design <- as.data.frame(design)...
R/sc.two.ways.stepfor.R#L 23       colnames(design)[j] <- colnames(d)...
R/sc.two.ways.stepfor.R#L 24       if (ncol(d) == 2) {...
R/sc.two.ways.stepfor.R#L 26       }...
R/sc.two.ways.stepfor.R#L 27       d <- d[, -pos]...
R/sc.two.ways.stepfor.R#L 28       if (is.null(dim(d))) {...
R/sc.two.ways.stepfor.R#L 31       }...
R/sc.two.ways.stepfor.R#L 32       result2 <- summary(glm(y ~ ., data...
R/sc.two.ways.stepfor.R#L 35       ]...
R/sc.two.ways.stepfor.R#L 36       max <- max(result2[-1], na.rm = TR...
R/sc.two.ways.stepfor.R#L 37       while (max > alfa) {...
R/sc.two.ways.stepfor.R#L 44           min <- min(result2[-1], na.rm ...
R/sc.two.ways.stepfor.R#L 45           lastname <- names(result2)[res...
R/sc.two.ways.stepfor.R#L 49           design <- as.data.frame(design...
R/sc.two.ways.stepfor.R#L 50           colnames(design) <- lastname...
R/sc.two.ways.stepfor.R#L 53           ,...
R/sc.two.ways.stepfor.R#L 54           4...
R/sc.two.ways.stepfor.R#L 57       }...
R/sc.two.ways.stepfor.R#L 58       j <- ncol(design) + 1...
R/sc.two.ways.stepfor.R#L 59       pval <- NULL...
R/sc.two.ways.stepfor.R#L 60       for (i in 1:ncol(d)) {...
R/sc.two.ways.stepfor.R#L 66       }...
R/sc.two.ways.stepfor.R#L 67       min <- min(pval, na.rm = TRUE)...
R/sc.two.ways.stepfor.R#L 68       if (ncol(d) == 1) {...
R/sc.two.ways.stepfor.R#L 70           design <- cbind(design, d[, 1]...
R/sc.two.ways.stepfor.R#L 71           design <- as.data.frame(design...
R/sc.two.ways.stepfor.R#L 72           colnames(design)[j] <- colname...
R/sc.two.ways.stepfor.R#L 75       }...
R/sc.two.ways.stepfor.R#L 78       lm1 <- glm(y ~ 1, family = family,...
R/sc.two.ways.stepfor.R#L 80       lm1 <- glm(y ~ ., data = design, f...
R/sc.two.ways.stepfor.R#L 83   }...
R/scmpClass.R#L 41   "scMaSigProClass",...
R/scmpClass.R#L 42   representation(...
R/scmpClass.R#L 51   ),...
R/scmpClass.R#L 52   validity = function(object) {...
R/scmpClass.R#L 55       stop("sce slot is not a valid Sing...
R/scmpClass.R#L 60       stop("scPVector slot is not a vali...
R/scmpClass.R#L 65       stop("scTFitClass slot is not a va...
R/scmpClass.R#L 70       stop("compress.sce slot is not a v...
R/scmpClass.R#L 75       stop("edesign slot is not a valid ...
R/scmpClass.R#L 80       stop("addParams slot is not a vali...
R/scmpClass.R#L 82       # Check addParamClass slot...
R/scmpClass.R#L 83       if (!validObject(object@addParams)...
R/scmpClass.R#L 84           stop("'sig.genes' slot is not ...
R/scmpClass.R#L 85       }...
R/scmpClass.R#L 86   },...
R/scmpClass.R#L 87   prototype = list(...
R/scmpClass.R#L 93   )...
R/scmpClass.R#L104   new("scMaSigProClass",...
R/scmpClass.R#L113   )...
R/scmpClass.R#L117   "show",...
R/scmpClass.R#L118   "scMaSigProClass",...
R/scmpClass.R#L119   function(object) {...
R/scmpClass.R#L121   }...
R/scmpShow.R#L 14   # Show Basic information...
R/scmpShow.R#L 15   cat("Class: ScMaSigPro\n")...
R/scmpShow.R#L 16   cat(paste0("nCells: ", ncol(object@sce...
R/scmpShow.R#L 17   cat(paste0("nFeatures: ", nrow(object@...
R/scmpShow.R#L 18   cat("Pseudotime Range:", paste(range(c...
R/scmpShow.R#L 20   # Calculate the Compression...
R/scmpShow.R#L 21   compressed.cell.metadata <- as.data.fr...
R/scmpShow.R#L 22   if (length(compressed.cell.metadata) >...
R/scmpShow.R#L 25       "\nBinned Pseudotime: ", paste(ran...
R/scmpShow.R#L 26       round(mean(compressed.cell.metadat...
R/scmpShow.R#L 36   }...
R/scmpShow.R#L 38   # Calculate Dynamic Information...
R/scmpShow.R#L 39   if (length(object@scPVector@p.adjusted...
R/scmpShow.R#L 43       cat("\nSig. Profiles (P-vector): N...
R/scmpShow.R#L 45       cat(paste("\nSig. Models (sc.p.vec...
R/scmpShow.R#L 47   }...
R/scmpShow.R#L 49   # Influential Genes if any...
R/scmpShow.R#L 50   if (ncol(object@scTFit@influ.info) > 0...
R/scmpShow.R#L 52   }...
R/scmpShow.R#L 57   if (return_type == "avg_bin_size") {...
R/scmpShow.R#L 60   } else if (return_type == "num_bins") ...
R/scmpShow.R#L 63   } else {...
R/scmpShow.R#L 65   }...
R/scTFitClass.R#L 28   "scTFitClass",...
R/scTFitClass.R#L 29   representation(...
R/scTFitClass.R#L 37   ),...
R/scTFitClass.R#L 38   validity = function(object) {...
R/scTFitClass.R#L 40       stop("sol slot must be a data.fram...
R/scTFitClass.R#L 43       stop("coefficients slot must be a ...
R/scTFitClass.R#L 46       stop("group.coeffs slot must be a ...
R/scTFitClass.R#L 49       stop("t.score slot must be a data....
R/scTFitClass.R#L 52       stop("variables slot must be a cha...
R/scTFitClass.R#L 55       stop("groups.vector slot must be a...
R/scTFitClass.R#L 58       stop("influ.info slot must be a ma...
R/scTFitClass.R#L 60   },...
R/scTFitClass.R#L 61   prototype = list(...
R/scTFitClass.R#L 69   )...
R/solShow.R#L 20   # Check Object Validity...
R/solShow.R#L 21   assert_that(is(scmpObj, "scMaSigProCla...
R/solShow.R#L 23   )...
R/solShow.R#L 25   # Check if the sol exist...
R/solShow.R#L 26   assert_that(!all(dim(scmpObj@scTFit@so...
R/solShow.R#L 28   )...
R/solShow.R#L 30   # Extract...
R/solShow.R#L 31   sol <- scmpObj@scTFit@sol %>% as.data....
R/solShow.R#L 33   # If viewing is requested...
R/solShow.R#L 34   if (view) {...
R/solShow.R#L 36   }...
R/solShow.R#L 38   # If requested...
R/solShow.R#L 39   if (return) {...
R/solShow.R#L 41   }...
man/annotate_monocle3_cds.Rd#L  8   cds,...
man/annotate_monocle3_cds.Rd#L  9   reduction_method = "umap",...
man/annotate_monocle3_cds.Rd#L 10   path_prefix = "Path",...
man/annotate_monocle3_cds.Rd#L 11   root_label = "root",...
man/annotate_monocle3_cds.Rd#L 12   pseudotime_colname = "Pseudotime",...
man/annotate_monocle3_cds.Rd#L 13   path_colname = path_prefix,...
man/annotate_monocle3_cds.Rd#L 14   verbose = TRUE...
man/annotate_monocle3_cds.Rd#L 55   reduction_method = "umap",...
man/annotate_monocle3_cds.Rd#L 56   path_prefix = "Path",...
man/annotate_monocle3_cds.Rd#L 57   root_label = "root",...
man/annotate_monocle3_cds.Rd#L 58   path_colname = path_prefix,...
man/annotate_monocle3_cds.Rd#L 59   verbose = TRUE...
man/annotate_sce.Rd#L  8   sce,...
man/annotate_sce.Rd#L  9   pseudotime_colname = "Pseudotime",...
man/annotate_sce.Rd#L 10   path_prefix = "Path",...
man/annotate_sce.Rd#L 11   root_label = "root",...
man/annotate_sce.Rd#L 12   path_colname = path_prefix,...
man/annotate_sce.Rd#L 13   existing_pseudotime_colname = NULL,...
man/annotate_sce.Rd#L 14   existing_path_colname = NULL,...
man/annotate_sce.Rd#L 15   labels_exist = FALSE,...
man/annotate_sce.Rd#L 16   verbose = TRUE...
man/annotate_sce.Rd#L 60   pseudotime_colname = "Pseudotime",...
man/annotate_sce.Rd#L 61   path_colname = "Path"...
man/as_scmp.Rd#L  8   object,...
man/as_scmp.Rd#L  9   from = "cds",...
man/as_scmp.Rd#L 10   path_prefix = "Path",...
man/as_scmp.Rd#L 11   root_label = "root",...
man/as_scmp.Rd#L 12   pseudotime_colname = "Pseudotime",...
man/as_scmp.Rd#L 13   path_colname = path_prefix,...
man/as_scmp.Rd#L 14   verbose = TRUE,...
man/as_scmp.Rd#L 15   additional_params = list(labels_exist ...
man/as_scmp.Rd#L 53   from = "cds", path_prefix = "Path",...
man/as_scmp.Rd#L 54   root_label = "root",...
man/as_scmp.Rd#L 55   path_colname = path_prefix,...
man/as_scmp.Rd#L 56   verbose = TRUE...
man/create_range.Rd#L  8   x,...
man/create_range.Rd#L  9   bin_pseudotime_colname = "scmp_binned_...
man/create_range.Rd#L 10   bin_size_colname = "scmp_bin_size",...
man/create_range.Rd#L 11   bin_colname = "scmp_bin",...
man/create_range.Rd#L 12   verbose = TRUE...
man/create_range.Rd#L 18   \item{bin}{A factor column representin...
man/create_range.Rd#L 19   \item{bin_size}{A numeric column repre...
man/create_range.Rd#L 20   \item{binned_time}{A numeric column re...
man/create_range.Rd#L 25   \describe{...
man/create_range.Rd#L 30   }...
man/edesignClass-class.Rd#L 26   Valid objects must have:...
man/edesignClass-class.Rd#L 27   \itemize{...
man/edesignClass-class.Rd#L 31   }...
man/entropy_discretize.Rd#L  8   scmpObject,...
man/entropy_discretize.Rd#L  9   pseudotime_colname = scmpObject@addPar...
man/entropy_discretize.Rd#L 10   path_colname = scmpObject@addParams@pa...
man/entropy_discretize.Rd#L 11   bin_method = "Sturges",...
man/entropy_discretize.Rd#L 12   drop.fac = 0.5,...
man/entropy_discretize.Rd#L 13   verbose = TRUE,...
man/entropy_discretize.Rd#L 14   binning = "universal",...
man/entropy_discretize.Rd#L 15   bin_colname = "scmp_bin",...
man/entropy_discretize.Rd#L 16   bin_size_colname = "scmp_bin_size",...
man/entropy_discretize.Rd#L 17   bin_pseudotime_colname = "scmp_binned_...
man/entropy_discretize.Rd#L 18   additional_params = list(use_unique_ti...
man/entropy_discretize.Rd#L 83   cell_metadata = data.frame, pseudotime...
man/entropy_discretize.Rd#L 84   bin_method = "Sturges", drop.fac = 0.5...
man/make.pseudobulk.counts.Rd#L  8   scmpObject,...
man/make.pseudobulk.counts.Rd#L  9   bin_members_colname = scmpObject@addPa...
man/make.pseudobulk.counts.Rd#L 10   bin_colname = scmpObject@addParams@bin...
man/make.pseudobulk.counts.Rd#L 11   assay_name = "counts",...
man/make.pseudobulk.counts.Rd#L 12   cluster_count_by = "sum"...
man/make.pseudobulk.counts.Rd#L 47   counts = sc_counts,...
man/make.pseudobulk.counts.Rd#L 48   pseudo_bulk_profile = pb_profile,...
man/make.pseudobulk.counts.Rd#L 49   cluster_count_by = "mean"...
man/make.pseudobulk.design.Rd#L  8   scmpObject,...
man/make.pseudobulk.design.Rd#L  9   path_colname = scmpObject@addParams@pa...
man/make.pseudobulk.design.Rd#L 10   bin_colname = scmpObject@addParams@bin...
man/make.pseudobulk.design.Rd#L 11   bin_size_colname = scmpObject@addParam...
man/make.pseudobulk.design.Rd#L 12   bin_members_colname = "scmp_bin_member...
man/make.pseudobulk.design.Rd#L 13   bin_pseudotime_colname = scmpObject@ad...
man/make.pseudobulk.design.Rd#L 14   verbose = TRUE...
man/make.pseudobulk.design.Rd#L 65   compressed_cell_metadata = df,...
man/make.pseudobulk.design.Rd#L 66   path_colname = "path1", binned_pseudot...
man/sc.get.siggenes.Rd#L  8   scmpObj,...
man/sc.get.siggenes.Rd#L  9   rsq = 0.7,...
man/sc.get.siggenes.Rd#L 10   vars = c("all", "each", "groups"),...
man/sc.get.siggenes.Rd#L 11   significant.intercept = "dummy"...
man/sc.get.siggenes.Rd#L 23   \item \code{"all"}: generates one sing...
man/sc.get.siggenes.Rd#L 24   \item \code{"each"}: generates as many...
man/sc.get.siggenes.Rd#L 25   \item \code{"groups"}: generates a sig...
man/sc.get.siggenes.Rd#L 33   \item \code{summary}: A vector or matr...
man/sc.get.siggenes.Rd#L 34   \item \code{sig.genes}: A list with de...
man/sc.get.siggenes.Rd#L 35   Each element of the list is also a lis...
man/sc.get.siggenes.Rd#L 37       \item{\code{sig.profiles}:}{Expres...
man/sc.get.siggenes.Rd#L 38       \item{\code{coefficients}:}{Regres...
man/sc.get.siggenes.Rd#L 39       \item{\code{group.coeffs}:}{Regres...
man/sc.get.siggenes.Rd#L 40       \item{\code{sig.pvalues}:}{P-value...
man/sc.get.siggenes.Rd#L 41       \item{\code{g}:}{Number of genes.}...
man/sc.get.siggenes.Rd#L 42       \item{\code{...}:}{Arguments passe...
man/sc.get.siggenes.Rd#L 44   }...
man/sc.make.design.matrix.Rd#L  8   scmpObject,...
man/sc.make.design.matrix.Rd#L  9   poly_degree = 2,...
man/sc.make.design.matrix.Rd#L 10   bin_pseudotime_colname = scmpObject@ad...
man/sc.make.design.matrix.Rd#L 11   path_colname = scmpObject@addParams@pa...
man/sc.p.vector.Rd#L  8   scmpObj,...
man/sc.p.vector.Rd#L  9   Q = 0.05,...
man/sc.p.vector.Rd#L 10   MT.adjust = "BH",...
man/sc.p.vector.Rd#L 11   min.obs = 6,...
man/sc.p.vector.Rd#L 12   family = MASS::negative.binomial(theta...
man/sc.p.vector.Rd#L 13   epsilon = 1e-05,...
man/sc.p.vector.Rd#L 14   verbose = TRUE,...
man/sc.p.vector.Rd#L 15   offset = T,...
man/sc.p.vector.Rd#L 16   parallel = F...
man/sc.p.vector.Rd#L 59   and indicate array naming. \code{rowna...
man/sc.p.vector.Rd#L 60   \code{colnames(design)} are the given ...
man/sc.PlotGroups.Rd#L  8   scmpObj,...
man/sc.PlotGroups.Rd#L  9   feature_id,...
man/sc.PlotGroups.Rd#L 10   xlab = "Pooled Pseudotime",...
man/sc.PlotGroups.Rd#L 11   ylab = "Pseudobulk Expression",...
man/sc.PlotGroups.Rd#L 12   smoothness = 0.01...
man/sc.T.fit.Rd#L  8   scmpObj,...
man/sc.T.fit.Rd#L  9   step.method = "backward",...
man/sc.T.fit.Rd#L 10   Q = scmpObj@addParams@Q,...
man/sc.T.fit.Rd#L 11   nvar.correction = FALSE,...
man/sc.T.fit.Rd#L 12   family = scmpObj@distribution,...
man/sc.T.fit.Rd#L 13   epsilon = scmpObj@addParams@epsilon,...
man/sc.T.fit.Rd#L 14   offset = T,...
man/sc.T.fit.Rd#L 15   verbose = TRUE,...
man/sc.T.fit.Rd#L 16   parallel = T...
man/sc.T.fit.Rd#L 43   \item p-value of the regression ANOVA...
man/sc.T.fit.Rd#L 44   \item R-squared of the model...
man/sc.T.fit.Rd#L 45   \item p-value of the regression coeffi...
man/scmp_estimateSizeFactorsForMatrix.Rd#L  8   counts,...
man/scmp_estimateSizeFactorsForMatrix.Rd#L  9   locfunc = stats::median,...
man/scmp_estimateSizeFactorsForMatrix.Rd#L 10   geoMeans,...
man/scmp_estimateSizeFactorsForMatrix.Rd#L 11   controlGenes,...
man/scmp_estimateSizeFactorsForMatrix.Rd#L 12   type = c("ratio", "poscounts")...
man/scTFitClass-class.Rd#L 16   \itemize{...
man/scTFitClass-class.Rd#L 20   }}...
* Checking if package already exists in CRAN... OK
* Checking for bioc-devel mailing list subscription...
* NOTE: Cannot determine whether maintainer is subscribed to the Bioc-Devel mailing list (requires admin credentials). Subscribe here: https://stat.ethz.ch/mailman/listinfo/bioc-devel
* Checking for support site registration...
* ERROR: Maintainer must add package name to Watched Tags on the support site; Edit your Support Site User Profile to add Watched Tags.
