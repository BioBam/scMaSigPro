% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as_scmp.R
\name{as_scmp}
\alias{as_scmp}
\title{Convert 'Cell Dataset' or 'SingleCellExperiment' object to ScMaSigPro
object.}
\usage{
as_scmp(
  object,
  from = "cds",
  path_prefix = "Path",
  root_label = "root",
  ptime_col = "Pseudotime",
  align_pseudotime = FALSE,
  path_col = path_prefix,
  anno_col = "cell_type",
  verbose = TRUE,
  interactive = TRUE,
  additional_params = list(labels_exist = FALSE)
)
}
\arguments{
\item{object}{An S4 object of class `cds/CellDataSet` or `SingleCellExperiment`.}

\item{from}{Character string specifying the class of 'object'. Use "cds" for
`cds/CellDataSet` class and "sce" for `SingleCellExperiment` class.}

\item{path_prefix}{Prefix used to annotate the paths. (Default is "Path").}

\item{root_label}{Label used to annotate root cells. (Default is "root").}

\item{ptime_col}{A character string representing the column name
for inferred Pseudotime values. (Default is "Pseudotime")}

\item{align_pseudotime}{Whether to automatically align two different pseudotimes.
See \code{\link{align_pseudotime}} for more details. (Default is FALSE).}

\item{path_col}{A character string representing the column name for branching
path assignment. (Default is `path_prefix`)}

\item{anno_col}{A character string representing the column name for cell level
metadata containing cell level annotations. (Default is "cell_type").}

\item{verbose}{Print detailed output in the console. (Default is TRUE)}

\item{interactive}{Whether to use the shiny application to select branching
paths. (Default is TRUE).}

\item{additional_params}{A named list of additional parameters. See examples.}
}
\value{
An object of class \code{\link{ScMaSigPro}}.
}
\description{
`as_scmp()` converts a cds/CellDataSet object from Monocle3 or a
SingleCellExperiment #' object to an instance of the scmpClass object.
}
\examples{
# Load Library
# library(scMaSigPro)
# Step-1: Load a dataset for testing
# This dataset is available as part of the package
# It is simulated with splatter
data("splat.sim", package = "scMaSigPro")

# Step-2: Convert to ScMaSigPro Object
# Here, we convert the sce object to an scMaSigPro object
scmp.sce <- as_scmp(
  object = splat.sim, from = "sce",
  align_pseudotime = TRUE,
  verbose = FALSE,
  additional_params = list(
    labels_exist = TRUE,
    exist_ptime_col = "Step",
    exist_path_col = "Group"
  )
)

}
\author{
Priyansh Srivastava \email{spriyansh29@gmail.com}
}
